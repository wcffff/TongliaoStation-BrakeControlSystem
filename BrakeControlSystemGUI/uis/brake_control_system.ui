<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>Form</class>
 <widget class="QWidget" name="Form">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>1920</width>
    <height>1080</height>
   </rect>
  </property>
  <property name="sizePolicy">
   <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
    <horstretch>0</horstretch>
    <verstretch>0</verstretch>
   </sizepolicy>
  </property>
  <property name="minimumSize">
   <size>
    <width>1920</width>
    <height>1080</height>
   </size>
  </property>
  <property name="maximumSize">
   <size>
    <width>1920</width>
    <height>1080</height>
   </size>
  </property>
  <property name="windowTitle">
   <string>通辽站下行编尾停车防溜器控制系统</string>
  </property>
  <property name="autoFillBackground">
   <bool>false</bool>
  </property>
  <widget class="QLabel" name="label_2">
   <property name="geometry">
    <rect>
     <x>0</x>
     <y>0</y>
     <width>1038</width>
     <height>1080</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>1038</width>
     <height>1080</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>1038</width>
     <height>1080</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">background-color: rgb(0, 0, 0);</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="Line" name="line_2">
   <property name="geometry">
    <rect>
     <x>60</x>
     <y>178</y>
     <width>980</width>
     <height>4</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>980</width>
     <height>4</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>980</width>
     <height>4</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(180, 197, 231);
background-color: rgb(180, 197, 231);</string>
   </property>
   <property name="orientation">
    <enum>Qt::Horizontal</enum>
   </property>
  </widget>
  <widget class="Line" name="line">
   <property name="geometry">
    <rect>
     <x>61</x>
     <y>214</y>
     <width>980</width>
     <height>4</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>980</width>
     <height>4</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>980</width>
     <height>4</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(180, 197, 231);
background-color: rgb(180, 197, 231);</string>
   </property>
   <property name="orientation">
    <enum>Qt::Horizontal</enum>
   </property>
  </widget>
  <widget class="Line" name="line_3">
   <property name="geometry">
    <rect>
     <x>60</x>
     <y>248</y>
     <width>980</width>
     <height>4</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>980</width>
     <height>4</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>980</width>
     <height>4</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(180, 197, 231);
background-color: rgb(180, 197, 231);</string>
   </property>
   <property name="orientation">
    <enum>Qt::Horizontal</enum>
   </property>
  </widget>
  <widget class="Line" name="line_4">
   <property name="geometry">
    <rect>
     <x>60</x>
     <y>278</y>
     <width>980</width>
     <height>4</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>980</width>
     <height>4</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>980</width>
     <height>4</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(180, 197, 231);
background-color: rgb(180, 197, 231);</string>
   </property>
   <property name="orientation">
    <enum>Qt::Horizontal</enum>
   </property>
  </widget>
  <widget class="Line" name="line_5">
   <property name="geometry">
    <rect>
     <x>60</x>
     <y>316</y>
     <width>980</width>
     <height>4</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>980</width>
     <height>4</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>980</width>
     <height>4</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(180, 197, 231);
background-color: rgb(180, 197, 231);</string>
   </property>
   <property name="orientation">
    <enum>Qt::Horizontal</enum>
   </property>
  </widget>
  <widget class="Line" name="line_6">
   <property name="geometry">
    <rect>
     <x>60</x>
     <y>352</y>
     <width>980</width>
     <height>4</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>980</width>
     <height>4</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>980</width>
     <height>4</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(180, 197, 231);
background-color: rgb(180, 197, 231);</string>
   </property>
   <property name="orientation">
    <enum>Qt::Horizontal</enum>
   </property>
  </widget>
  <widget class="Line" name="line_7">
   <property name="geometry">
    <rect>
     <x>60</x>
     <y>390</y>
     <width>980</width>
     <height>4</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>980</width>
     <height>4</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>980</width>
     <height>4</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(180, 197, 231);
background-color: rgb(180, 197, 231);</string>
   </property>
   <property name="orientation">
    <enum>Qt::Horizontal</enum>
   </property>
  </widget>
  <widget class="Line" name="line_8">
   <property name="geometry">
    <rect>
     <x>60</x>
     <y>426</y>
     <width>980</width>
     <height>4</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>980</width>
     <height>4</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>980</width>
     <height>4</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(180, 197, 231);
background-color: rgb(180, 197, 231);</string>
   </property>
   <property name="orientation">
    <enum>Qt::Horizontal</enum>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN16_3">
   <property name="geometry">
    <rect>
     <x>320</x>
     <y>721</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器3</string>
   </property>
  </widget>
  <widget class="QLabel" name="label">
   <property name="geometry">
    <rect>
     <x>1038</x>
     <y>0</y>
     <width>882</width>
     <height>1080</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>882</width>
     <height>1080</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>882</width>
     <height>1080</height>
    </size>
   </property>
   <property name="text">
    <string/>
   </property>
   <property name="pixmap">
    <pixmap resource="images/images.qrc">:/images/通辽站.png</pixmap>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN12_5">
   <property name="geometry">
    <rect>
     <x>220</x>
     <y>573</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(170, 0, 255); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(150, 0, 230); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>12道</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN23_3">
   <property name="geometry">
    <rect>
     <x>267</x>
     <y>992</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器3</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN21_1">
   <property name="geometry">
    <rect>
     <x>616</x>
     <y>920</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器1</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN9_5">
   <property name="geometry">
    <rect>
     <x>181</x>
     <y>472</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(170, 0, 255); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(150, 0, 230); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>9道</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN9_2">
   <property name="geometry">
    <rect>
     <x>435</x>
     <y>470</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器2</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN22_5">
   <property name="geometry">
    <rect>
     <x>220</x>
     <y>955</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(170, 0, 255); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(150, 0, 230); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>22道</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN12_2">
   <property name="geometry">
    <rect>
     <x>502</x>
     <y>577</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器2</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN22_3">
   <property name="geometry">
    <rect>
     <x>320</x>
     <y>956</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器3</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN6_4">
   <property name="geometry">
    <rect>
     <x>974</x>
     <y>330</y>
     <width>54</width>
     <height>35</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>54</width>
     <height>35</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>54</width>
     <height>35</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
    border-image: url(:/images/gray_btn.png);
}

QPushButton[state=&quot;brake&quot;] {
    border-image: url(:/images/red_btn.png);
}

QPushButton[state=&quot;brake&quot;]:checked {
    border-image: url(:/images/red_btn_pressed.png);
}

QPushButton[state=&quot;release&quot;] {
    border-image: url(:/images/green_btn.png);
}

QPushButton[state=&quot;release&quot;]:checked {
    border-image: url(:/images/green_btn_pressed.png);
}

QPushButton[state=&quot;maintain&quot;] {
    border-image: url(:/images/yellow_btn.png);
}

QPushButton[state=&quot;releasing&quot;] {
    border-image: url(:/images/red_gradient_btn.png);
}

QPushButton[state=&quot;braking&quot;] {
    border-image: url(:/images/green_gradient_btn.png);
}</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN8_1">
   <property name="geometry">
    <rect>
     <x>673</x>
     <y>414</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器1</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN18_2">
   <property name="geometry">
    <rect>
     <x>500</x>
     <y>814</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器2</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN20_4">
   <property name="geometry">
    <rect>
     <x>974</x>
     <y>870</y>
     <width>54</width>
     <height>35</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>54</width>
     <height>35</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>54</width>
     <height>35</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
    border-image: url(:/images/gray_btn.png);
}

QPushButton[state=&quot;brake&quot;] {
    border-image: url(:/images/red_btn.png);
}

QPushButton[state=&quot;brake&quot;]:checked {
    border-image: url(:/images/red_btn_pressed.png);
}

QPushButton[state=&quot;release&quot;] {
    border-image: url(:/images/green_btn.png);
}

QPushButton[state=&quot;release&quot;]:checked {
    border-image: url(:/images/green_btn_pressed.png);
}

QPushButton[state=&quot;maintain&quot;] {
    border-image: url(:/images/yellow_btn.png);
}

QPushButton[state=&quot;releasing&quot;] {
    border-image: url(:/images/red_gradient_btn.png);
}

QPushButton[state=&quot;braking&quot;] {
    border-image: url(:/images/green_gradient_btn.png);
}</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN12_1">
   <property name="geometry">
    <rect>
     <x>682</x>
     <y>577</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器1</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN16_5">
   <property name="geometry">
    <rect>
     <x>220</x>
     <y>717</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(170, 0, 255); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(150, 0, 230); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>16道</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN23_4">
   <property name="geometry">
    <rect>
     <x>857</x>
     <y>978</y>
     <width>54</width>
     <height>35</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>54</width>
     <height>35</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>54</width>
     <height>35</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
    border-image: url(:/images/gray_btn.png);
}

QPushButton[state=&quot;brake&quot;] {
    border-image: url(:/images/red_btn.png);
}

QPushButton[state=&quot;brake&quot;]:checked {
    border-image: url(:/images/red_btn_pressed.png);
}

QPushButton[state=&quot;release&quot;] {
    border-image: url(:/images/green_btn.png);
}

QPushButton[state=&quot;release&quot;]:checked {
    border-image: url(:/images/green_btn_pressed.png);
}

QPushButton[state=&quot;maintain&quot;] {
    border-image: url(:/images/yellow_btn.png);
}

QPushButton[state=&quot;releasing&quot;] {
    border-image: url(:/images/red_gradient_btn.png);
}

QPushButton[state=&quot;braking&quot;] {
    border-image: url(:/images/green_gradient_btn.png);
}</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN7_1">
   <property name="geometry">
    <rect>
     <x>618</x>
     <y>378</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器1</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN12_4">
   <property name="geometry">
    <rect>
     <x>974</x>
     <y>564</y>
     <width>54</width>
     <height>35</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>54</width>
     <height>35</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>54</width>
     <height>35</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
    border-image: url(:/images/gray_btn.png);
}

QPushButton[state=&quot;brake&quot;] {
    border-image: url(:/images/red_btn.png);
}

QPushButton[state=&quot;brake&quot;]:checked {
    border-image: url(:/images/red_btn_pressed.png);
}

QPushButton[state=&quot;release&quot;] {
    border-image: url(:/images/green_btn.png);
}

QPushButton[state=&quot;release&quot;]:checked {
    border-image: url(:/images/green_btn_pressed.png);
}

QPushButton[state=&quot;maintain&quot;] {
    border-image: url(:/images/yellow_btn.png);
}

QPushButton[state=&quot;releasing&quot;] {
    border-image: url(:/images/red_gradient_btn.png);
}

QPushButton[state=&quot;braking&quot;] {
    border-image: url(:/images/green_gradient_btn.png);
}</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN13_3">
   <property name="geometry">
    <rect>
     <x>267</x>
     <y>615</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器3</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN19_4">
   <property name="geometry">
    <rect>
     <x>857</x>
     <y>839</y>
     <width>54</width>
     <height>35</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>54</width>
     <height>35</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>54</width>
     <height>35</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
    border-image: url(:/images/gray_btn.png);
}

QPushButton[state=&quot;brake&quot;] {
    border-image: url(:/images/red_btn.png);
}

QPushButton[state=&quot;brake&quot;]:checked {
    border-image: url(:/images/red_btn_pressed.png);
}

QPushButton[state=&quot;release&quot;] {
    border-image: url(:/images/green_btn.png);
}

QPushButton[state=&quot;release&quot;]:checked {
    border-image: url(:/images/green_btn_pressed.png);
}

QPushButton[state=&quot;maintain&quot;] {
    border-image: url(:/images/yellow_btn.png);
}

QPushButton[state=&quot;releasing&quot;] {
    border-image: url(:/images/red_gradient_btn.png);
}

QPushButton[state=&quot;braking&quot;] {
    border-image: url(:/images/green_gradient_btn.png);
}</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN11_1">
   <property name="geometry">
    <rect>
     <x>616</x>
     <y>542</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器1</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN4_2">
   <property name="geometry">
    <rect>
     <x>496</x>
     <y>271</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器2</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN21_3">
   <property name="geometry">
    <rect>
     <x>267</x>
     <y>920</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器3</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN6_1">
   <property name="geometry">
    <rect>
     <x>673</x>
     <y>342</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器1</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN11_4">
   <property name="geometry">
    <rect>
     <x>857</x>
     <y>531</y>
     <width>54</width>
     <height>35</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>54</width>
     <height>35</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>54</width>
     <height>35</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
    border-image: url(:/images/gray_btn.png);
}

QPushButton[state=&quot;brake&quot;] {
    border-image: url(:/images/red_btn.png);
}

QPushButton[state=&quot;brake&quot;]:checked {
    border-image: url(:/images/red_btn_pressed.png);
}

QPushButton[state=&quot;release&quot;] {
    border-image: url(:/images/green_btn.png);
}

QPushButton[state=&quot;release&quot;]:checked {
    border-image: url(:/images/green_btn_pressed.png);
}

QPushButton[state=&quot;maintain&quot;] {
    border-image: url(:/images/yellow_btn.png);
}

QPushButton[state=&quot;releasing&quot;] {
    border-image: url(:/images/red_gradient_btn.png);
}

QPushButton[state=&quot;braking&quot;] {
    border-image: url(:/images/green_gradient_btn.png);
}</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN16_2">
   <property name="geometry">
    <rect>
     <x>500</x>
     <y>722</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器2</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN17_4">
   <property name="geometry">
    <rect>
     <x>857</x>
     <y>767</y>
     <width>54</width>
     <height>35</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>54</width>
     <height>35</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>54</width>
     <height>35</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
    border-image: url(:/images/gray_btn.png);
}

QPushButton[state=&quot;brake&quot;] {
    border-image: url(:/images/red_btn.png);
}

QPushButton[state=&quot;brake&quot;]:checked {
    border-image: url(:/images/red_btn_pressed.png);
}

QPushButton[state=&quot;release&quot;] {
    border-image: url(:/images/green_btn.png);
}

QPushButton[state=&quot;release&quot;]:checked {
    border-image: url(:/images/green_btn_pressed.png);
}

QPushButton[state=&quot;maintain&quot;] {
    border-image: url(:/images/yellow_btn.png);
}

QPushButton[state=&quot;releasing&quot;] {
    border-image: url(:/images/red_gradient_btn.png);
}

QPushButton[state=&quot;braking&quot;] {
    border-image: url(:/images/green_gradient_btn.png);
}</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN23_2">
   <property name="geometry">
    <rect>
     <x>435</x>
     <y>992</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器2</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN20_3">
   <property name="geometry">
    <rect>
     <x>320</x>
     <y>882</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器3</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN12_3">
   <property name="geometry">
    <rect>
     <x>322</x>
     <y>578</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器3</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN2_1">
   <property name="geometry">
    <rect>
     <x>673</x>
     <y>201</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器1</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN19_3">
   <property name="geometry">
    <rect>
     <x>267</x>
     <y>848</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器3</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN18_4">
   <property name="geometry">
    <rect>
     <x>974</x>
     <y>808</y>
     <width>54</width>
     <height>35</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>54</width>
     <height>35</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>54</width>
     <height>35</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
    border-image: url(:/images/gray_btn.png);
}

QPushButton[state=&quot;brake&quot;] {
    border-image: url(:/images/red_btn.png);
}

QPushButton[state=&quot;brake&quot;]:checked {
    border-image: url(:/images/red_btn_pressed.png);
}

QPushButton[state=&quot;release&quot;] {
    border-image: url(:/images/green_btn.png);
}

QPushButton[state=&quot;release&quot;]:checked {
    border-image: url(:/images/green_btn_pressed.png);
}

QPushButton[state=&quot;maintain&quot;] {
    border-image: url(:/images/yellow_btn.png);
}

QPushButton[state=&quot;releasing&quot;] {
    border-image: url(:/images/red_gradient_btn.png);
}

QPushButton[state=&quot;braking&quot;] {
    border-image: url(:/images/green_gradient_btn.png);
}</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN3_2">
   <property name="geometry">
    <rect>
     <x>439</x>
     <y>236</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器2</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN19_5">
   <property name="geometry">
    <rect>
     <x>180</x>
     <y>848</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(170, 0, 255); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(150, 0, 230); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>19道</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN11_5">
   <property name="geometry">
    <rect>
     <x>180</x>
     <y>540</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(170, 0, 255); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(150, 0, 230); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>11道</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN15_4">
   <property name="geometry">
    <rect>
     <x>857</x>
     <y>673</y>
     <width>54</width>
     <height>35</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>54</width>
     <height>35</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>54</width>
     <height>35</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
    border-image: url(:/images/gray_btn.png);
}

QPushButton[state=&quot;brake&quot;] {
    border-image: url(:/images/red_btn.png);
}

QPushButton[state=&quot;brake&quot;]:checked {
    border-image: url(:/images/red_btn_pressed.png);
}

QPushButton[state=&quot;release&quot;] {
    border-image: url(:/images/green_btn.png);
}

QPushButton[state=&quot;release&quot;]:checked {
    border-image: url(:/images/green_btn_pressed.png);
}

QPushButton[state=&quot;maintain&quot;] {
    border-image: url(:/images/yellow_btn.png);
}

QPushButton[state=&quot;releasing&quot;] {
    border-image: url(:/images/red_gradient_btn.png);
}

QPushButton[state=&quot;braking&quot;] {
    border-image: url(:/images/green_gradient_btn.png);
}</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN13_2">
   <property name="geometry">
    <rect>
     <x>435</x>
     <y>615</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器2</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN8_4">
   <property name="geometry">
    <rect>
     <x>974</x>
     <y>404</y>
     <width>54</width>
     <height>35</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>54</width>
     <height>35</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>54</width>
     <height>35</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
    border-image: url(:/images/gray_btn.png);
}

QPushButton[state=&quot;brake&quot;] {
    border-image: url(:/images/red_btn.png);
}

QPushButton[state=&quot;brake&quot;]:checked {
    border-image: url(:/images/red_btn_pressed.png);
}

QPushButton[state=&quot;release&quot;] {
    border-image: url(:/images/green_btn.png);
}

QPushButton[state=&quot;release&quot;]:checked {
    border-image: url(:/images/green_btn_pressed.png);
}

QPushButton[state=&quot;maintain&quot;] {
    border-image: url(:/images/yellow_btn.png);
}

QPushButton[state=&quot;releasing&quot;] {
    border-image: url(:/images/red_gradient_btn.png);
}

QPushButton[state=&quot;braking&quot;] {
    border-image: url(:/images/green_gradient_btn.png);
}</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN11_3">
   <property name="geometry">
    <rect>
     <x>267</x>
     <y>542</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器3</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN21_4">
   <property name="geometry">
    <rect>
     <x>857</x>
     <y>908</y>
     <width>54</width>
     <height>35</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>54</width>
     <height>35</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>54</width>
     <height>35</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
    border-image: url(:/images/gray_btn.png);
}

QPushButton[state=&quot;brake&quot;] {
    border-image: url(:/images/red_btn.png);
}

QPushButton[state=&quot;brake&quot;]:checked {
    border-image: url(:/images/red_btn_pressed.png);
}

QPushButton[state=&quot;release&quot;] {
    border-image: url(:/images/green_btn.png);
}

QPushButton[state=&quot;release&quot;]:checked {
    border-image: url(:/images/green_btn_pressed.png);
}

QPushButton[state=&quot;maintain&quot;] {
    border-image: url(:/images/yellow_btn.png);
}

QPushButton[state=&quot;releasing&quot;] {
    border-image: url(:/images/red_gradient_btn.png);
}

QPushButton[state=&quot;braking&quot;] {
    border-image: url(:/images/green_gradient_btn.png);
}</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN2_3">
   <property name="geometry">
    <rect>
     <x>320</x>
     <y>201</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="autoFillBackground">
    <bool>false</bool>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器3</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN2_5">
   <property name="geometry">
    <rect>
     <x>220</x>
     <y>201</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(170, 0, 255); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(150, 0, 230); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>2道</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN20_2">
   <property name="geometry">
    <rect>
     <x>500</x>
     <y>882</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器2</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN24_3">
   <property name="geometry">
    <rect>
     <x>320</x>
     <y>1030</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器3</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN18_1">
   <property name="geometry">
    <rect>
     <x>680</x>
     <y>814</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器1</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN22_4">
   <property name="geometry">
    <rect>
     <x>974</x>
     <y>948</y>
     <width>54</width>
     <height>35</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>54</width>
     <height>35</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>54</width>
     <height>35</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
    border-image: url(:/images/gray_btn.png);
}

QPushButton[state=&quot;brake&quot;] {
    border-image: url(:/images/red_btn.png);
}

QPushButton[state=&quot;brake&quot;]:checked {
    border-image: url(:/images/red_btn_pressed.png);
}

QPushButton[state=&quot;release&quot;] {
    border-image: url(:/images/green_btn.png);
}

QPushButton[state=&quot;release&quot;]:checked {
    border-image: url(:/images/green_btn_pressed.png);
}

QPushButton[state=&quot;maintain&quot;] {
    border-image: url(:/images/yellow_btn.png);
}

QPushButton[state=&quot;releasing&quot;] {
    border-image: url(:/images/red_gradient_btn.png);
}

QPushButton[state=&quot;braking&quot;] {
    border-image: url(:/images/green_gradient_btn.png);
}</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN15_2">
   <property name="geometry">
    <rect>
     <x>435</x>
     <y>686</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器2</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN4_5">
   <property name="geometry">
    <rect>
     <x>220</x>
     <y>265</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(170, 0, 255); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(150, 0, 230); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>4道</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN5_3">
   <property name="geometry">
    <rect>
     <x>267</x>
     <y>306</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器3</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN17_3">
   <property name="geometry">
    <rect>
     <x>267</x>
     <y>780</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器3</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN14_2">
   <property name="geometry">
    <rect>
     <x>502</x>
     <y>650</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器2</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN4_3">
   <property name="geometry">
    <rect>
     <x>320</x>
     <y>271</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器3</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN22_2">
   <property name="geometry">
    <rect>
     <x>500</x>
     <y>956</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器2</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN19_2">
   <property name="geometry">
    <rect>
     <x>435</x>
     <y>848</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器2</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN18_3">
   <property name="geometry">
    <rect>
     <x>320</x>
     <y>814</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器3</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN24_1">
   <property name="geometry">
    <rect>
     <x>680</x>
     <y>1030</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器1</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN6_5">
   <property name="geometry">
    <rect>
     <x>220</x>
     <y>339</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(170, 0, 255); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(150, 0, 230); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>6道</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN13_1">
   <property name="geometry">
    <rect>
     <x>616</x>
     <y>615</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器1</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN3_5">
   <property name="geometry">
    <rect>
     <x>184</x>
     <y>233</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(170, 0, 255); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(150, 0, 230); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>3道</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN9_3">
   <property name="geometry">
    <rect>
     <x>267</x>
     <y>470</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器3</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN10_5">
   <property name="geometry">
    <rect>
     <x>220</x>
     <y>506</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(170, 0, 255); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(150, 0, 230); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>10道</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN4_4">
   <property name="geometry">
    <rect>
     <x>974</x>
     <y>257</y>
     <width>54</width>
     <height>35</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>54</width>
     <height>35</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>54</width>
     <height>35</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
    border-image: url(:/images/gray_btn.png);
}

QPushButton[state=&quot;brake&quot;] {
    border-image: url(:/images/red_btn.png);
}

QPushButton[state=&quot;brake&quot;]:checked {
    border-image: url(:/images/red_btn_pressed.png);
}

QPushButton[state=&quot;release&quot;] {
    border-image: url(:/images/green_btn.png);
}

QPushButton[state=&quot;release&quot;]:checked {
    border-image: url(:/images/green_btn_pressed.png);
}

QPushButton[state=&quot;maintain&quot;] {
    border-image: url(:/images/yellow_btn.png);
}

QPushButton[state=&quot;releasing&quot;] {
    border-image: url(:/images/red_gradient_btn.png);
}

QPushButton[state=&quot;braking&quot;] {
    border-image: url(:/images/green_gradient_btn.png);
}</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN7_2">
   <property name="geometry">
    <rect>
     <x>439</x>
     <y>378</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器2</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN9_4">
   <property name="geometry">
    <rect>
     <x>857</x>
     <y>464</y>
     <width>54</width>
     <height>35</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>54</width>
     <height>35</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>54</width>
     <height>35</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
    border-image: url(:/images/gray_btn.png);
}

QPushButton[state=&quot;brake&quot;] {
    border-image: url(:/images/red_btn.png);
}

QPushButton[state=&quot;brake&quot;]:checked {
    border-image: url(:/images/red_btn_pressed.png);
}

QPushButton[state=&quot;release&quot;] {
    border-image: url(:/images/green_btn.png);
}

QPushButton[state=&quot;release&quot;]:checked {
    border-image: url(:/images/green_btn_pressed.png);
}

QPushButton[state=&quot;maintain&quot;] {
    border-image: url(:/images/yellow_btn.png);
}

QPushButton[state=&quot;releasing&quot;] {
    border-image: url(:/images/red_gradient_btn.png);
}

QPushButton[state=&quot;braking&quot;] {
    border-image: url(:/images/green_gradient_btn.png);
}</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN5_2">
   <property name="geometry">
    <rect>
     <x>439</x>
     <y>306</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器2</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN17_5">
   <property name="geometry">
    <rect>
     <x>180</x>
     <y>777</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(170, 0, 255); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(150, 0, 230); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>17道</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN10_2">
   <property name="geometry">
    <rect>
     <x>501</x>
     <y>507</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器2</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN7_4">
   <property name="geometry">
    <rect>
     <x>857</x>
     <y>368</y>
     <width>54</width>
     <height>35</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>54</width>
     <height>35</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>54</width>
     <height>35</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
    border-image: url(:/images/gray_btn.png);
}

QPushButton[state=&quot;brake&quot;] {
    border-image: url(:/images/red_btn.png);
}

QPushButton[state=&quot;brake&quot;]:checked {
    border-image: url(:/images/red_btn_pressed.png);
}

QPushButton[state=&quot;release&quot;] {
    border-image: url(:/images/green_btn.png);
}

QPushButton[state=&quot;release&quot;]:checked {
    border-image: url(:/images/green_btn_pressed.png);
}

QPushButton[state=&quot;maintain&quot;] {
    border-image: url(:/images/yellow_btn.png);
}

QPushButton[state=&quot;releasing&quot;] {
    border-image: url(:/images/red_gradient_btn.png);
}

QPushButton[state=&quot;braking&quot;] {
    border-image: url(:/images/green_gradient_btn.png);
}</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN20_5">
   <property name="geometry">
    <rect>
     <x>220</x>
     <y>879</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(170, 0, 255); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(150, 0, 230); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>20道</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN2_2">
   <property name="geometry">
    <rect>
     <x>496</x>
     <y>201</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器2</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN16_1">
   <property name="geometry">
    <rect>
     <x>680</x>
     <y>723</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器1</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN13_4">
   <property name="geometry">
    <rect>
     <x>857</x>
     <y>600</y>
     <width>54</width>
     <height>35</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>54</width>
     <height>35</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>54</width>
     <height>35</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
    border-image: url(:/images/gray_btn.png);
}

QPushButton[state=&quot;brake&quot;] {
    border-image: url(:/images/red_btn.png);
}

QPushButton[state=&quot;brake&quot;]:checked {
    border-image: url(:/images/red_btn_pressed.png);
}

QPushButton[state=&quot;release&quot;] {
    border-image: url(:/images/green_btn.png);
}

QPushButton[state=&quot;release&quot;]:checked {
    border-image: url(:/images/green_btn_pressed.png);
}

QPushButton[state=&quot;maintain&quot;] {
    border-image: url(:/images/yellow_btn.png);
}

QPushButton[state=&quot;releasing&quot;] {
    border-image: url(:/images/red_gradient_btn.png);
}

QPushButton[state=&quot;braking&quot;] {
    border-image: url(:/images/green_gradient_btn.png);
}</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN20_1">
   <property name="geometry">
    <rect>
     <x>680</x>
     <y>882</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器1</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN7_3">
   <property name="geometry">
    <rect>
     <x>267</x>
     <y>378</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器3</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN6_2">
   <property name="geometry">
    <rect>
     <x>496</x>
     <y>342</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器2</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN8_3">
   <property name="geometry">
    <rect>
     <x>320</x>
     <y>414</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器3</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN21_2">
   <property name="geometry">
    <rect>
     <x>435</x>
     <y>920</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器2</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN5_1">
   <property name="geometry">
    <rect>
     <x>618</x>
     <y>306</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器1</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN17_1">
   <property name="geometry">
    <rect>
     <x>616</x>
     <y>780</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器1</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN7_5">
   <property name="geometry">
    <rect>
     <x>184</x>
     <y>376</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(170, 0, 255); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(150, 0, 230); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>7道</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN8_5">
   <property name="geometry">
    <rect>
     <x>220</x>
     <y>413</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(170, 0, 255); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(150, 0, 230); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>8道</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN16_4">
   <property name="geometry">
    <rect>
     <x>974</x>
     <y>708</y>
     <width>54</width>
     <height>35</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>54</width>
     <height>35</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>54</width>
     <height>35</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
    border-image: url(:/images/gray_btn.png);
}

QPushButton[state=&quot;brake&quot;] {
    border-image: url(:/images/red_btn.png);
}

QPushButton[state=&quot;brake&quot;]:checked {
    border-image: url(:/images/red_btn_pressed.png);
}

QPushButton[state=&quot;release&quot;] {
    border-image: url(:/images/green_btn.png);
}

QPushButton[state=&quot;release&quot;]:checked {
    border-image: url(:/images/green_btn_pressed.png);
}

QPushButton[state=&quot;maintain&quot;] {
    border-image: url(:/images/yellow_btn.png);
}

QPushButton[state=&quot;releasing&quot;] {
    border-image: url(:/images/red_gradient_btn.png);
}

QPushButton[state=&quot;braking&quot;] {
    border-image: url(:/images/green_gradient_btn.png);
}</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN22_1">
   <property name="geometry">
    <rect>
     <x>680</x>
     <y>956</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器1</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN17_2">
   <property name="geometry">
    <rect>
     <x>435</x>
     <y>780</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器2</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN10_4">
   <property name="geometry">
    <rect>
     <x>974</x>
     <y>498</y>
     <width>54</width>
     <height>35</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>54</width>
     <height>35</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>54</width>
     <height>35</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
    border-image: url(:/images/gray_btn.png);
}

QPushButton[state=&quot;brake&quot;] {
    border-image: url(:/images/red_btn.png);
}

QPushButton[state=&quot;brake&quot;]:checked {
    border-image: url(:/images/red_btn_pressed.png);
}

QPushButton[state=&quot;release&quot;] {
    border-image: url(:/images/green_btn.png);
}

QPushButton[state=&quot;release&quot;]:checked {
    border-image: url(:/images/green_btn_pressed.png);
}

QPushButton[state=&quot;maintain&quot;] {
    border-image: url(:/images/yellow_btn.png);
}

QPushButton[state=&quot;releasing&quot;] {
    border-image: url(:/images/red_gradient_btn.png);
}

QPushButton[state=&quot;braking&quot;] {
    border-image: url(:/images/green_gradient_btn.png);
}</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN14_3">
   <property name="geometry">
    <rect>
     <x>322</x>
     <y>650</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器3</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN14_4">
   <property name="geometry">
    <rect>
     <x>974</x>
     <y>636</y>
     <width>54</width>
     <height>35</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>54</width>
     <height>35</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>54</width>
     <height>35</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
    border-image: url(:/images/gray_btn.png);
}

QPushButton[state=&quot;brake&quot;] {
    border-image: url(:/images/red_btn.png);
}

QPushButton[state=&quot;brake&quot;]:checked {
    border-image: url(:/images/red_btn_pressed.png);
}

QPushButton[state=&quot;release&quot;] {
    border-image: url(:/images/green_btn.png);
}

QPushButton[state=&quot;release&quot;]:checked {
    border-image: url(:/images/green_btn_pressed.png);
}

QPushButton[state=&quot;maintain&quot;] {
    border-image: url(:/images/yellow_btn.png);
}

QPushButton[state=&quot;releasing&quot;] {
    border-image: url(:/images/red_gradient_btn.png);
}

QPushButton[state=&quot;braking&quot;] {
    border-image: url(:/images/green_gradient_btn.png);
}</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN3_1">
   <property name="geometry">
    <rect>
     <x>618</x>
     <y>236</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器1</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN24_4">
   <property name="geometry">
    <rect>
     <x>974</x>
     <y>1016</y>
     <width>54</width>
     <height>35</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>54</width>
     <height>35</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>54</width>
     <height>35</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
    border-image: url(:/images/gray_btn.png);
}

QPushButton[state=&quot;brake&quot;] {
    border-image: url(:/images/red_btn.png);
}

QPushButton[state=&quot;brake&quot;]:checked {
    border-image: url(:/images/red_btn_pressed.png);
}

QPushButton[state=&quot;release&quot;] {
    border-image: url(:/images/green_btn.png);
}

QPushButton[state=&quot;release&quot;]:checked {
    border-image: url(:/images/green_btn_pressed.png);
}

QPushButton[state=&quot;maintain&quot;] {
    border-image: url(:/images/yellow_btn.png);
}

QPushButton[state=&quot;releasing&quot;] {
    border-image: url(:/images/red_gradient_btn.png);
}

QPushButton[state=&quot;braking&quot;] {
    border-image: url(:/images/green_gradient_btn.png);
}</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN15_3">
   <property name="geometry">
    <rect>
     <x>267</x>
     <y>685</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器3</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN3_3">
   <property name="geometry">
    <rect>
     <x>267</x>
     <y>236</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器3</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN6_3">
   <property name="geometry">
    <rect>
     <x>320</x>
     <y>342</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器3</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN3_4">
   <property name="geometry">
    <rect>
     <x>857</x>
     <y>226</y>
     <width>54</width>
     <height>35</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>54</width>
     <height>35</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>54</width>
     <height>35</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
    border-image: url(:/images/gray_btn.png);
}

QPushButton[state=&quot;brake&quot;] {
    border-image: url(:/images/red_btn.png);
}

QPushButton[state=&quot;brake&quot;]:checked {
    border-image: url(:/images/red_btn_pressed.png);
}

QPushButton[state=&quot;release&quot;] {
    border-image: url(:/images/green_btn.png);
}

QPushButton[state=&quot;release&quot;]:checked {
    border-image: url(:/images/green_btn_pressed.png);
}

QPushButton[state=&quot;maintain&quot;] {
    border-image: url(:/images/yellow_btn.png);
}

QPushButton[state=&quot;releasing&quot;] {
    border-image: url(:/images/red_gradient_btn.png);
}

QPushButton[state=&quot;braking&quot;] {
    border-image: url(:/images/green_gradient_btn.png);
}</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN23_5">
   <property name="geometry">
    <rect>
     <x>180</x>
     <y>987</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(170, 0, 255); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(150, 0, 230); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>23道</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN24_5">
   <property name="geometry">
    <rect>
     <x>220</x>
     <y>1026</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(170, 0, 255); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(150, 0, 230); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>24道</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN15_5">
   <property name="geometry">
    <rect>
     <x>180</x>
     <y>684</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(170, 0, 255); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(150, 0, 230); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>15道</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN11_2">
   <property name="geometry">
    <rect>
     <x>435</x>
     <y>542</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器2</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN14_5">
   <property name="geometry">
    <rect>
     <x>220</x>
     <y>645</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(170, 0, 255); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(150, 0, 230); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>14道</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN10_1">
   <property name="geometry">
    <rect>
     <x>681</x>
     <y>507</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器1</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN2_4">
   <property name="geometry">
    <rect>
     <x>974</x>
     <y>191</y>
     <width>54</width>
     <height>35</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>54</width>
     <height>35</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>54</width>
     <height>35</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
    border-image: url(:/images/gray_btn.png);
}

QPushButton[state=&quot;brake&quot;] {
    border-image: url(:/images/red_btn.png);
}

QPushButton[state=&quot;brake&quot;]:checked {
    border-image: url(:/images/red_btn_pressed.png);
}

QPushButton[state=&quot;release&quot;] {
    border-image: url(:/images/green_btn.png);
}

QPushButton[state=&quot;release&quot;]:checked {
    border-image: url(:/images/green_btn_pressed.png);
}

QPushButton[state=&quot;maintain&quot;] {
    border-image: url(:/images/yellow_btn.png);
}

QPushButton[state=&quot;releasing&quot;] {
    border-image: url(:/images/red_gradient_btn.png);
}

QPushButton[state=&quot;braking&quot;] {
    border-image: url(:/images/green_gradient_btn.png);
}</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN10_3">
   <property name="geometry">
    <rect>
     <x>321</x>
     <y>506</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器3</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN23_1">
   <property name="geometry">
    <rect>
     <x>616</x>
     <y>992</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器1</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN21_5">
   <property name="geometry">
    <rect>
     <x>180</x>
     <y>917</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(170, 0, 255); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(150, 0, 230); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>21道</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN5_5">
   <property name="geometry">
    <rect>
     <x>185</x>
     <y>303</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(170, 0, 255); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(150, 0, 230); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>5道</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN24_2">
   <property name="geometry">
    <rect>
     <x>500</x>
     <y>1030</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器2</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN19_1">
   <property name="geometry">
    <rect>
     <x>616</x>
     <y>848</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器1</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN8_2">
   <property name="geometry">
    <rect>
     <x>496</x>
     <y>414</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器2</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN9_1">
   <property name="geometry">
    <rect>
     <x>616</x>
     <y>470</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器1</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN4_1">
   <property name="geometry">
    <rect>
     <x>673</x>
     <y>271</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器1</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN14_1">
   <property name="geometry">
    <rect>
     <x>682</x>
     <y>650</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器1</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN15_1">
   <property name="geometry">
    <rect>
     <x>616</x>
     <y>686</y>
     <width>120</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>120</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	background-color: rgb(200, 200, 200);
    border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;] {
    background-color: rgb(200, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;brake&quot;]:checked {
    background-color: rgb(100, 0, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;braking&quot;] {
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(200, 255, 200, 255),
		stop:0.5 rgba(0, 200, 0, 255),
		stop:1 rgba(200, 255, 200, 255));
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;] {
    background-color: rgb(0, 200, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;release&quot;]:checked {
    background-color: rgb(0, 100, 0);
	border-radius: 0px;
	color: rgb(255, 255, 255);
}

QPushButton[state=&quot;releasing&quot;] {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, 
		stop:0 rgba(255, 200, 200, 255),
		stop:0.5 rgba(200, 0, 0, 255),
		stop:1 rgba(255, 200, 200, 255));
	border-radius: 0px;
	border-radius: 0px;
	color: rgb(255, 255, 255);
}</string>
   </property>
   <property name="text">
    <string>停车器1</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN5_4">
   <property name="geometry">
    <rect>
     <x>857</x>
     <y>294</y>
     <width>54</width>
     <height>35</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>54</width>
     <height>35</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>54</width>
     <height>35</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
    border-image: url(:/images/gray_btn.png);
}

QPushButton[state=&quot;brake&quot;] {
    border-image: url(:/images/red_btn.png);
}

QPushButton[state=&quot;brake&quot;]:checked {
    border-image: url(:/images/red_btn_pressed.png);
}

QPushButton[state=&quot;release&quot;] {
    border-image: url(:/images/green_btn.png);
}

QPushButton[state=&quot;release&quot;]:checked {
    border-image: url(:/images/green_btn_pressed.png);
}

QPushButton[state=&quot;maintain&quot;] {
    border-image: url(:/images/yellow_btn.png);
}

QPushButton[state=&quot;releasing&quot;] {
    border-image: url(:/images/red_gradient_btn.png);
}

QPushButton[state=&quot;braking&quot;] {
    border-image: url(:/images/green_gradient_btn.png);
}</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN13_5">
   <property name="geometry">
    <rect>
     <x>180</x>
     <y>609</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(170, 0, 255); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(150, 0, 230); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>13道</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN18_5">
   <property name="geometry">
    <rect>
     <x>220</x>
     <y>816</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(170, 0, 255); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(150, 0, 230); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>18道</string>
   </property>
  </widget>
  <widget class="Line" name="line_9">
   <property name="geometry">
    <rect>
     <x>60</x>
     <y>696</y>
     <width>980</width>
     <height>4</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>980</width>
     <height>4</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>980</width>
     <height>4</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(180, 197, 231);
background-color: rgb(180, 197, 231);</string>
   </property>
   <property name="orientation">
    <enum>Qt::Horizontal</enum>
   </property>
  </widget>
  <widget class="Line" name="line_10">
   <property name="geometry">
    <rect>
     <x>60</x>
     <y>623</y>
     <width>980</width>
     <height>4</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>980</width>
     <height>4</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>980</width>
     <height>4</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(180, 197, 231);
background-color: rgb(180, 197, 231);</string>
   </property>
   <property name="orientation">
    <enum>Qt::Horizontal</enum>
   </property>
  </widget>
  <widget class="Line" name="line_11">
   <property name="geometry">
    <rect>
     <x>60</x>
     <y>731</y>
     <width>980</width>
     <height>4</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>980</width>
     <height>4</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>980</width>
     <height>4</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(180, 197, 231);
background-color: rgb(180, 197, 231);</string>
   </property>
   <property name="orientation">
    <enum>Qt::Horizontal</enum>
   </property>
  </widget>
  <widget class="Line" name="line_12">
   <property name="geometry">
    <rect>
     <x>60</x>
     <y>658</y>
     <width>980</width>
     <height>4</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>980</width>
     <height>4</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>980</width>
     <height>4</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(180, 197, 231);
background-color: rgb(180, 197, 231);</string>
   </property>
   <property name="orientation">
    <enum>Qt::Horizontal</enum>
   </property>
  </widget>
  <widget class="Line" name="line_13">
   <property name="geometry">
    <rect>
     <x>60</x>
     <y>554</y>
     <width>980</width>
     <height>4</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>980</width>
     <height>4</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>980</width>
     <height>4</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(180, 197, 231);
background-color: rgb(180, 197, 231);</string>
   </property>
   <property name="orientation">
    <enum>Qt::Horizontal</enum>
   </property>
  </widget>
  <widget class="Line" name="line_14">
   <property name="geometry">
    <rect>
     <x>60</x>
     <y>486</y>
     <width>980</width>
     <height>4</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>980</width>
     <height>4</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>980</width>
     <height>4</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(180, 197, 231);
background-color: rgb(180, 197, 231);</string>
   </property>
   <property name="orientation">
    <enum>Qt::Horizontal</enum>
   </property>
  </widget>
  <widget class="Line" name="line_15">
   <property name="geometry">
    <rect>
     <x>60</x>
     <y>520</y>
     <width>980</width>
     <height>4</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>980</width>
     <height>4</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>980</width>
     <height>4</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(180, 197, 231);
background-color: rgb(180, 197, 231);</string>
   </property>
   <property name="orientation">
    <enum>Qt::Horizontal</enum>
   </property>
  </widget>
  <widget class="Line" name="line_16">
   <property name="geometry">
    <rect>
     <x>60</x>
     <y>586</y>
     <width>980</width>
     <height>4</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>980</width>
     <height>4</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>980</width>
     <height>4</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(180, 197, 231);
background-color: rgb(180, 197, 231);</string>
   </property>
   <property name="orientation">
    <enum>Qt::Horizontal</enum>
   </property>
  </widget>
  <widget class="Line" name="line_17">
   <property name="geometry">
    <rect>
     <x>60</x>
     <y>1000</y>
     <width>980</width>
     <height>4</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>980</width>
     <height>4</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>980</width>
     <height>4</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(180, 197, 231);
background-color: rgb(180, 197, 231);</string>
   </property>
   <property name="orientation">
    <enum>Qt::Horizontal</enum>
   </property>
  </widget>
  <widget class="Line" name="line_18">
   <property name="geometry">
    <rect>
     <x>60</x>
     <y>930</y>
     <width>980</width>
     <height>4</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>980</width>
     <height>4</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>980</width>
     <height>4</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(180, 197, 231);
background-color: rgb(180, 197, 231);</string>
   </property>
   <property name="orientation">
    <enum>Qt::Horizontal</enum>
   </property>
  </widget>
  <widget class="Line" name="line_19">
   <property name="geometry">
    <rect>
     <x>60</x>
     <y>1039</y>
     <width>980</width>
     <height>4</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>980</width>
     <height>4</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>980</width>
     <height>4</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(180, 197, 231);
background-color: rgb(180, 197, 231);</string>
   </property>
   <property name="orientation">
    <enum>Qt::Horizontal</enum>
   </property>
  </widget>
  <widget class="Line" name="line_20">
   <property name="geometry">
    <rect>
     <x>60</x>
     <y>970</y>
     <width>980</width>
     <height>4</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>980</width>
     <height>4</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>980</width>
     <height>4</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(180, 197, 231);
background-color: rgb(180, 197, 231);</string>
   </property>
   <property name="orientation">
    <enum>Qt::Horizontal</enum>
   </property>
  </widget>
  <widget class="Line" name="line_21">
   <property name="geometry">
    <rect>
     <x>60</x>
     <y>862</y>
     <width>980</width>
     <height>4</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>980</width>
     <height>4</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>980</width>
     <height>4</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(180, 197, 231);
background-color: rgb(180, 197, 231);</string>
   </property>
   <property name="orientation">
    <enum>Qt::Horizontal</enum>
   </property>
  </widget>
  <widget class="Line" name="line_22">
   <property name="geometry">
    <rect>
     <x>60</x>
     <y>790</y>
     <width>980</width>
     <height>4</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>980</width>
     <height>4</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>980</width>
     <height>4</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(180, 197, 231);
background-color: rgb(180, 197, 231);</string>
   </property>
   <property name="orientation">
    <enum>Qt::Horizontal</enum>
   </property>
  </widget>
  <widget class="Line" name="line_23">
   <property name="geometry">
    <rect>
     <x>60</x>
     <y>830</y>
     <width>980</width>
     <height>4</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>980</width>
     <height>4</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>980</width>
     <height>4</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(180, 197, 231);
background-color: rgb(180, 197, 231);</string>
   </property>
   <property name="orientation">
    <enum>Qt::Horizontal</enum>
   </property>
  </widget>
  <widget class="Line" name="line_24">
   <property name="geometry">
    <rect>
     <x>60</x>
     <y>892</y>
     <width>980</width>
     <height>4</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>980</width>
     <height>4</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>980</width>
     <height>4</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(180, 197, 231);
background-color: rgb(180, 197, 231);</string>
   </property>
   <property name="orientation">
    <enum>Qt::Horizontal</enum>
   </property>
  </widget>
  <widget class="QLabel" name="label_27">
   <property name="geometry">
    <rect>
     <x>1060</x>
     <y>240</y>
     <width>30</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="maximumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(255, 255, 255);</string>
   </property>
   <property name="text">
    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:18pt;&quot;&gt;3&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
  </widget>
  <widget class="QLabel" name="label_30">
   <property name="geometry">
    <rect>
     <x>1060</x>
     <y>270</y>
     <width>30</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="maximumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(255, 255, 255);</string>
   </property>
   <property name="text">
    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:18pt;&quot;&gt;4&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
  </widget>
  <widget class="QLabel" name="label_34">
   <property name="geometry">
    <rect>
     <x>1060</x>
     <y>340</y>
     <width>30</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="maximumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(255, 255, 255);</string>
   </property>
   <property name="text">
    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:18pt;&quot;&gt;6&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
  </widget>
  <widget class="QLabel" name="label_37">
   <property name="geometry">
    <rect>
     <x>1060</x>
     <y>304</y>
     <width>30</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="maximumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(255, 255, 255);</string>
   </property>
   <property name="text">
    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:18pt;&quot;&gt;5&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
  </widget>
  <widget class="QLabel" name="label_38">
   <property name="geometry">
    <rect>
     <x>1060</x>
     <y>380</y>
     <width>30</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="maximumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(255, 255, 255);</string>
   </property>
   <property name="text">
    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:18pt;&quot;&gt;7&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
  </widget>
  <widget class="QLabel" name="label_43">
   <property name="geometry">
    <rect>
     <x>1060</x>
     <y>160</y>
     <width>30</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="maximumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(255, 255, 255);</string>
   </property>
   <property name="text">
    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:18pt;&quot;&gt;1&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
  </widget>
  <widget class="QLabel" name="label_46">
   <property name="geometry">
    <rect>
     <x>1060</x>
     <y>200</y>
     <width>30</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="maximumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(255, 255, 255);</string>
   </property>
   <property name="text">
    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:18pt;&quot;&gt;2&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
  </widget>
  <widget class="QLabel" name="label_48">
   <property name="geometry">
    <rect>
     <x>1060</x>
     <y>414</y>
     <width>30</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="maximumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(255, 255, 255);</string>
   </property>
   <property name="text">
    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:18pt;&quot;&gt;8&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
  </widget>
  <widget class="QLabel" name="label_49">
   <property name="geometry">
    <rect>
     <x>1050</x>
     <y>720</y>
     <width>30</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="maximumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(255, 255, 255);</string>
   </property>
   <property name="text">
    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:18pt;&quot;&gt;16&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
  </widget>
  <widget class="QLabel" name="label_47">
   <property name="geometry">
    <rect>
     <x>1050</x>
     <y>510</y>
     <width>30</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="maximumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(255, 255, 255);</string>
   </property>
   <property name="text">
    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:18pt;&quot;&gt;10&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
  </widget>
  <widget class="QLabel" name="label_39">
   <property name="geometry">
    <rect>
     <x>1050</x>
     <y>610</y>
     <width>30</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="maximumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(255, 255, 255);</string>
   </property>
   <property name="text">
    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:18pt;&quot;&gt;13&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-size:18pt;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
  </widget>
  <widget class="QLabel" name="label_44">
   <property name="geometry">
    <rect>
     <x>1060</x>
     <y>477</y>
     <width>30</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="maximumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(255, 255, 255);</string>
   </property>
   <property name="text">
    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:18pt;&quot;&gt;9&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
  </widget>
  <widget class="QLabel" name="label_31">
   <property name="geometry">
    <rect>
     <x>1050</x>
     <y>576</y>
     <width>30</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="maximumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(255, 255, 255);</string>
   </property>
   <property name="text">
    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:18pt;&quot;&gt;12&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
  </widget>
  <widget class="QLabel" name="label_40">
   <property name="geometry">
    <rect>
     <x>1050</x>
     <y>680</y>
     <width>30</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="maximumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(255, 255, 255);</string>
   </property>
   <property name="text">
    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:18pt;&quot;&gt;15&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
  </widget>
  <widget class="QLabel" name="label_28">
   <property name="geometry">
    <rect>
     <x>1050</x>
     <y>542</y>
     <width>30</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="maximumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(255, 255, 255);</string>
   </property>
   <property name="text">
    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:18pt;&quot;&gt;11&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
  </widget>
  <widget class="QLabel" name="label_35">
   <property name="geometry">
    <rect>
     <x>1050</x>
     <y>640</y>
     <width>30</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="maximumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(255, 255, 255);</string>
   </property>
   <property name="text">
    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:18pt;&quot;&gt;14&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
  </widget>
  <widget class="QLabel" name="label_36">
   <property name="geometry">
    <rect>
     <x>1050</x>
     <y>950</y>
     <width>30</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="maximumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(255, 255, 255);</string>
   </property>
   <property name="text">
    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:18pt;&quot;&gt;22&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
  </widget>
  <widget class="QLabel" name="label_50">
   <property name="geometry">
    <rect>
     <x>1050</x>
     <y>1030</y>
     <width>30</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="maximumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(255, 255, 255);</string>
   </property>
   <property name="text">
    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:18pt;&quot;&gt;24&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
  </widget>
  <widget class="QLabel" name="label_41">
   <property name="geometry">
    <rect>
     <x>1050</x>
     <y>920</y>
     <width>30</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="maximumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(255, 255, 255);</string>
   </property>
   <property name="text">
    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:18pt;&quot;&gt;21&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-size:18pt;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
  </widget>
  <widget class="QLabel" name="label_45">
   <property name="geometry">
    <rect>
     <x>1050</x>
     <y>780</y>
     <width>30</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="maximumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(255, 255, 255);</string>
   </property>
   <property name="text">
    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:18pt;&quot;&gt;17&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
  </widget>
  <widget class="QLabel" name="label_42">
   <property name="geometry">
    <rect>
     <x>1050</x>
     <y>990</y>
     <width>30</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="maximumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(255, 255, 255);</string>
   </property>
   <property name="text">
    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:18pt;&quot;&gt;23&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
  </widget>
  <widget class="QLabel" name="label_29">
   <property name="geometry">
    <rect>
     <x>1050</x>
     <y>850</y>
     <width>30</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="maximumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(255, 255, 255);</string>
   </property>
   <property name="text">
    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:18pt;&quot;&gt;19&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
  </widget>
  <widget class="QLabel" name="label_51">
   <property name="geometry">
    <rect>
     <x>1050</x>
     <y>818</y>
     <width>30</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="maximumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(255, 255, 255);</string>
   </property>
   <property name="text">
    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:18pt;&quot;&gt;18&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
  </widget>
  <widget class="QLabel" name="label_32">
   <property name="geometry">
    <rect>
     <x>1050</x>
     <y>880</y>
     <width>30</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="maximumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(255, 255, 255);</string>
   </property>
   <property name="text">
    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:18pt;&quot;&gt;20&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
  </widget>
  <widget class="QLabel" name="label_52">
   <property name="geometry">
    <rect>
     <x>20</x>
     <y>780</y>
     <width>30</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(255, 255, 255);</string>
   </property>
   <property name="text">
    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:18pt;&quot;&gt;17&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
  </widget>
  <widget class="QLabel" name="label_53">
   <property name="geometry">
    <rect>
     <x>30</x>
     <y>200</y>
     <width>30</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(255, 255, 255);</string>
   </property>
   <property name="text">
    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:18pt;&quot;&gt;2&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
  </widget>
  <widget class="QLabel" name="label_54">
   <property name="geometry">
    <rect>
     <x>30</x>
     <y>380</y>
     <width>30</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(255, 255, 255);</string>
   </property>
   <property name="text">
    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:18pt;&quot;&gt;7&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
  </widget>
  <widget class="QLabel" name="label_33">
   <property name="geometry">
    <rect>
     <x>20</x>
     <y>575</y>
     <width>30</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(255, 255, 255);</string>
   </property>
   <property name="text">
    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:18pt;&quot;&gt;12&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
  </widget>
  <widget class="QLabel" name="label_55">
   <property name="geometry">
    <rect>
     <x>30</x>
     <y>302</y>
     <width>30</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(255, 255, 255);</string>
   </property>
   <property name="text">
    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:18pt;&quot;&gt;5&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
  </widget>
  <widget class="QLabel" name="label_56">
   <property name="geometry">
    <rect>
     <x>20</x>
     <y>610</y>
     <width>30</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(255, 255, 255);</string>
   </property>
   <property name="text">
    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:18pt;&quot;&gt;13&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-size:18pt;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
  </widget>
  <widget class="QLabel" name="label_57">
   <property name="geometry">
    <rect>
     <x>20</x>
     <y>1030</y>
     <width>30</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(255, 255, 255);</string>
   </property>
   <property name="text">
    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:18pt;&quot;&gt;24&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
  </widget>
  <widget class="QLabel" name="label_58">
   <property name="geometry">
    <rect>
     <x>30</x>
     <y>160</y>
     <width>30</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(255, 255, 255);</string>
   </property>
   <property name="text">
    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:18pt;&quot;&gt;1&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
  </widget>
  <widget class="QLabel" name="label_59">
   <property name="geometry">
    <rect>
     <x>20</x>
     <y>680</y>
     <width>30</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(255, 255, 255);</string>
   </property>
   <property name="text">
    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:18pt;&quot;&gt;15&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
  </widget>
  <widget class="QLabel" name="label_60">
   <property name="geometry">
    <rect>
     <x>20</x>
     <y>850</y>
     <width>30</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(255, 255, 255);</string>
   </property>
   <property name="text">
    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:18pt;&quot;&gt;19&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
  </widget>
  <widget class="QLabel" name="label_61">
   <property name="geometry">
    <rect>
     <x>20</x>
     <y>950</y>
     <width>30</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(255, 255, 255);</string>
   </property>
   <property name="text">
    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:18pt;&quot;&gt;22&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
  </widget>
  <widget class="QLabel" name="label_62">
   <property name="geometry">
    <rect>
     <x>30</x>
     <y>270</y>
     <width>30</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(255, 255, 255);</string>
   </property>
   <property name="text">
    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:18pt;&quot;&gt;4&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
  </widget>
  <widget class="QLabel" name="label_63">
   <property name="geometry">
    <rect>
     <x>20</x>
     <y>507</y>
     <width>30</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(255, 255, 255);</string>
   </property>
   <property name="text">
    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:18pt;&quot;&gt;10&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
  </widget>
  <widget class="QLabel" name="label_64">
   <property name="geometry">
    <rect>
     <x>19</x>
     <y>816</y>
     <width>30</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(255, 255, 255);</string>
   </property>
   <property name="text">
    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:18pt;&quot;&gt;18&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
  </widget>
  <widget class="QLabel" name="label_65">
   <property name="geometry">
    <rect>
     <x>20</x>
     <y>640</y>
     <width>30</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(255, 255, 255);</string>
   </property>
   <property name="text">
    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:18pt;&quot;&gt;14&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
  </widget>
  <widget class="QLabel" name="label_66">
   <property name="geometry">
    <rect>
     <x>30</x>
     <y>340</y>
     <width>30</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(255, 255, 255);</string>
   </property>
   <property name="text">
    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:18pt;&quot;&gt;6&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
  </widget>
  <widget class="QLabel" name="label_67">
   <property name="geometry">
    <rect>
     <x>20</x>
     <y>990</y>
     <width>30</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(255, 255, 255);</string>
   </property>
   <property name="text">
    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:18pt;&quot;&gt;23&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
  </widget>
  <widget class="QLabel" name="label_68">
   <property name="geometry">
    <rect>
     <x>20</x>
     <y>720</y>
     <width>30</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(255, 255, 255);</string>
   </property>
   <property name="text">
    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:18pt;&quot;&gt;16&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
  </widget>
  <widget class="QLabel" name="label_69">
   <property name="geometry">
    <rect>
     <x>30</x>
     <y>410</y>
     <width>30</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(255, 255, 255);</string>
   </property>
   <property name="text">
    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:18pt;&quot;&gt;8&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
  </widget>
  <widget class="QLabel" name="label_70">
   <property name="geometry">
    <rect>
     <x>20</x>
     <y>920</y>
     <width>30</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(255, 255, 255);</string>
   </property>
   <property name="text">
    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:18pt;&quot;&gt;21&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-size:18pt;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
  </widget>
  <widget class="QLabel" name="label_71">
   <property name="geometry">
    <rect>
     <x>20</x>
     <y>880</y>
     <width>30</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(255, 255, 255);</string>
   </property>
   <property name="text">
    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:18pt;&quot;&gt;20&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
  </widget>
  <widget class="QLabel" name="label_72">
   <property name="geometry">
    <rect>
     <x>30</x>
     <y>240</y>
     <width>30</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(255, 255, 255);</string>
   </property>
   <property name="text">
    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:18pt;&quot;&gt;3&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
  </widget>
  <widget class="QLabel" name="label_73">
   <property name="geometry">
    <rect>
     <x>30</x>
     <y>473</y>
     <width>30</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(255, 255, 255);</string>
   </property>
   <property name="text">
    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:18pt;&quot;&gt;9&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
  </widget>
  <widget class="QLabel" name="label_74">
   <property name="geometry">
    <rect>
     <x>20</x>
     <y>542</y>
     <width>30</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>30</width>
     <height>30</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(255, 255, 255);</string>
   </property>
   <property name="text">
    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:18pt;&quot;&gt;11&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
  </widget>
  <widget class="QLabel" name="label_5">
   <property name="geometry">
    <rect>
     <x>1500</x>
     <y>80</y>
     <width>381</width>
     <height>61</height>
    </rect>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(255, 255, 255);</string>
   </property>
   <property name="text">
    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:16pt; font-weight:600;&quot;&gt;2025年06月06日 15:57:10&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
   <property name="alignment">
    <set>Qt::AlignCenter</set>
   </property>
  </widget>
  <widget class="QLabel" name="label_8">
   <property name="geometry">
    <rect>
     <x>590</x>
     <y>77</y>
     <width>791</width>
     <height>51</height>
    </rect>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>36</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(255, 255, 255);</string>
   </property>
   <property name="text">
    <string>通辽站下行编尾停车防溜器控制系统</string>
   </property>
   <property name="alignment">
    <set>Qt::AlignCenter</set>
   </property>
  </widget>
  <widget class="QLabel" name="label_9">
   <property name="geometry">
    <rect>
     <x>1500</x>
     <y>1030</y>
     <width>401</width>
     <height>41</height>
    </rect>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">color: rgb(255, 255, 255);</string>
   </property>
   <property name="text">
    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p align=&quot;center&quot;&gt;&lt;span style=&quot; font-size:12pt; font-weight:600;&quot;&gt;沈阳中铁安全设备有限责任公司 系统版本号v1.01&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
   </property>
   <property name="alignment">
    <set>Qt::AlignCenter</set>
   </property>
  </widget>
  <widget class="QLabel" name="label_anti_slip_2">
   <property name="geometry">
    <rect>
     <x>940</x>
     <y>219</y>
     <width>35</width>
     <height>7</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>35</width>
     <height>7</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>35</width>
     <height>7</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">QLabel {
    background-color: rgb(200, 200, 200);
}

QLabel[state=&quot;release&quot;] {
    background-color: rgb(43, 255, 1);
}

QLabel[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
}</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QLabel" name="label_anti_slip_3">
   <property name="geometry">
    <rect>
     <x>820</x>
     <y>254</y>
     <width>35</width>
     <height>7</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>35</width>
     <height>7</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>35</width>
     <height>7</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">QLabel {
    background-color: rgb(200, 200, 200);
}

QLabel[state=&quot;release&quot;] {
    background-color: rgb(43, 255, 1);
}

QLabel[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
}</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QLabel" name="label_anti_slip_4">
   <property name="geometry">
    <rect>
     <x>940</x>
     <y>284</y>
     <width>35</width>
     <height>7</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>35</width>
     <height>7</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>35</width>
     <height>7</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">QLabel {
    background-color: rgb(200, 200, 200);
}

QLabel[state=&quot;release&quot;] {
    background-color: rgb(43, 255, 1);
}

QLabel[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
}</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QLabel" name="label_anti_slip_5">
   <property name="geometry">
    <rect>
     <x>820</x>
     <y>321</y>
     <width>35</width>
     <height>7</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>35</width>
     <height>7</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>35</width>
     <height>7</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">QLabel {
    background-color: rgb(200, 200, 200);
}

QLabel[state=&quot;release&quot;] {
    background-color: rgb(43, 255, 1);
}

QLabel[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
}</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QLabel" name="label_anti_slip_8">
   <property name="geometry">
    <rect>
     <x>940</x>
     <y>431</y>
     <width>35</width>
     <height>7</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>35</width>
     <height>7</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>35</width>
     <height>7</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">QLabel {
    background-color: rgb(200, 200, 200);
}

QLabel[state=&quot;release&quot;] {
    background-color: rgb(43, 255, 1);
}

QLabel[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
}</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QLabel" name="label_anti_slip_6">
   <property name="geometry">
    <rect>
     <x>940</x>
     <y>357</y>
     <width>35</width>
     <height>7</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>35</width>
     <height>7</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>35</width>
     <height>7</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">QLabel {
    background-color: rgb(200, 200, 200);
}

QLabel[state=&quot;release&quot;] {
    background-color: rgb(43, 255, 1);
}

QLabel[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
}</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QLabel" name="label_anti_slip_7">
   <property name="geometry">
    <rect>
     <x>820</x>
     <y>396</y>
     <width>35</width>
     <height>7</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>35</width>
     <height>7</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>35</width>
     <height>7</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">QLabel {
    background-color: rgb(200, 200, 200);
}

QLabel[state=&quot;release&quot;] {
    background-color: rgb(43, 255, 1);
}

QLabel[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
}</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QLabel" name="label_anti_slip_9">
   <property name="geometry">
    <rect>
     <x>821</x>
     <y>492</y>
     <width>35</width>
     <height>7</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>35</width>
     <height>7</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>35</width>
     <height>7</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">QLabel {
    background-color: rgb(200, 200, 200);
}

QLabel[state=&quot;release&quot;] {
    background-color: rgb(43, 255, 1);
}

QLabel[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
}</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QLabel" name="label_anti_slip_12">
   <property name="geometry">
    <rect>
     <x>939</x>
     <y>591</y>
     <width>35</width>
     <height>7</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>35</width>
     <height>7</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>35</width>
     <height>7</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">QLabel {
    background-color: rgb(200, 200, 200);
}

QLabel[state=&quot;release&quot;] {
    background-color: rgb(43, 255, 1);
}

QLabel[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
}</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QLabel" name="label_anti_slip_14">
   <property name="geometry">
    <rect>
     <x>941</x>
     <y>663</y>
     <width>35</width>
     <height>7</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>35</width>
     <height>7</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>35</width>
     <height>7</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">QLabel {
    background-color: rgb(200, 200, 200);
}

QLabel[state=&quot;release&quot;] {
    background-color: rgb(43, 255, 1);
}

QLabel[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
}</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QLabel" name="label_anti_slip_10">
   <property name="geometry">
    <rect>
     <x>941</x>
     <y>525</y>
     <width>35</width>
     <height>7</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>35</width>
     <height>7</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>35</width>
     <height>7</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">QLabel {
    background-color: rgb(200, 200, 200);
}

QLabel[state=&quot;release&quot;] {
    background-color: rgb(43, 255, 1);
}

QLabel[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
}</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QLabel" name="label_anti_slip_11">
   <property name="geometry">
    <rect>
     <x>821</x>
     <y>560</y>
     <width>35</width>
     <height>7</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>35</width>
     <height>7</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>35</width>
     <height>7</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">QLabel {
    background-color: rgb(200, 200, 200);
}

QLabel[state=&quot;release&quot;] {
    background-color: rgb(43, 255, 1);
}

QLabel[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
}</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QLabel" name="label_anti_slip_13">
   <property name="geometry">
    <rect>
     <x>820</x>
     <y>629</y>
     <width>35</width>
     <height>7</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>35</width>
     <height>7</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>35</width>
     <height>7</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">QLabel {
    background-color: rgb(200, 200, 200);
}

QLabel[state=&quot;release&quot;] {
    background-color: rgb(43, 255, 1);
}

QLabel[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
}</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QLabel" name="label_anti_slip_16">
   <property name="geometry">
    <rect>
     <x>939</x>
     <y>736</y>
     <width>35</width>
     <height>7</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>35</width>
     <height>7</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>35</width>
     <height>7</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">QLabel {
    background-color: rgb(200, 200, 200);
}

QLabel[state=&quot;release&quot;] {
    background-color: rgb(43, 255, 1);
}

QLabel[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
}</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QLabel" name="label_anti_slip_15">
   <property name="geometry">
    <rect>
     <x>821</x>
     <y>701</y>
     <width>35</width>
     <height>7</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>35</width>
     <height>7</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>35</width>
     <height>7</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">QLabel {
    background-color: rgb(200, 200, 200);
}

QLabel[state=&quot;release&quot;] {
    background-color: rgb(43, 255, 1);
}

QLabel[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
}</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QLabel" name="label_anti_slip_17">
   <property name="geometry">
    <rect>
     <x>820</x>
     <y>796</y>
     <width>35</width>
     <height>7</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>35</width>
     <height>7</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>35</width>
     <height>7</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">QLabel {
    background-color: rgb(200, 200, 200);
}

QLabel[state=&quot;release&quot;] {
    background-color: rgb(43, 255, 1);
}

QLabel[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
}</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QLabel" name="label_anti_slip_20">
   <property name="geometry">
    <rect>
     <x>940</x>
     <y>898</y>
     <width>35</width>
     <height>7</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>35</width>
     <height>7</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>35</width>
     <height>7</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">QLabel {
    background-color: rgb(200, 200, 200);
}

QLabel[state=&quot;release&quot;] {
    background-color: rgb(43, 255, 1);
}

QLabel[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
}</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QLabel" name="label_anti_slip_22">
   <property name="geometry">
    <rect>
     <x>940</x>
     <y>976</y>
     <width>35</width>
     <height>7</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>35</width>
     <height>7</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>35</width>
     <height>7</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">QLabel {
    background-color: rgb(200, 200, 200);
}

QLabel[state=&quot;release&quot;] {
    background-color: rgb(43, 255, 1);
}

QLabel[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
}</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QLabel" name="label_anti_slip_18">
   <property name="geometry">
    <rect>
     <x>940</x>
     <y>835</y>
     <width>35</width>
     <height>7</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>35</width>
     <height>7</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>35</width>
     <height>7</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">QLabel {
    background-color: rgb(200, 200, 200);
}

QLabel[state=&quot;release&quot;] {
    background-color: rgb(43, 255, 1);
}

QLabel[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
}</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QLabel" name="label_anti_slip_19">
   <property name="geometry">
    <rect>
     <x>820</x>
     <y>868</y>
     <width>35</width>
     <height>7</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>35</width>
     <height>7</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>35</width>
     <height>7</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">QLabel {
    background-color: rgb(200, 200, 200);
}

QLabel[state=&quot;release&quot;] {
    background-color: rgb(43, 255, 1);
}

QLabel[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
}</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QLabel" name="label_anti_slip_21">
   <property name="geometry">
    <rect>
     <x>820</x>
     <y>935</y>
     <width>35</width>
     <height>7</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>35</width>
     <height>7</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>35</width>
     <height>7</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">QLabel {
    background-color: rgb(200, 200, 200);
}

QLabel[state=&quot;release&quot;] {
    background-color: rgb(43, 255, 1);
}

QLabel[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
}</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QLabel" name="label_anti_slip_24">
   <property name="geometry">
    <rect>
     <x>940</x>
     <y>1045</y>
     <width>35</width>
     <height>7</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>35</width>
     <height>7</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>35</width>
     <height>7</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">QLabel {
    background-color: rgb(200, 200, 200);
}

QLabel[state=&quot;release&quot;] {
    background-color: rgb(43, 255, 1);
}

QLabel[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
}</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QLabel" name="label_anti_slip_23">
   <property name="geometry">
    <rect>
     <x>820</x>
     <y>1006</y>
     <width>35</width>
     <height>7</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>35</width>
     <height>7</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>35</width>
     <height>7</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">QLabel {
    background-color: rgb(200, 200, 200);
}

QLabel[state=&quot;release&quot;] {
    background-color: rgb(43, 255, 1);
}

QLabel[state=&quot;maintain&quot;] {
    background-color: rgb(200, 200, 0);
}</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QFrame" name="frame">
   <property name="geometry">
    <rect>
     <x>0</x>
     <y>0</y>
     <width>1920</width>
     <height>60</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>1920</width>
     <height>60</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>1920</width>
     <height>60</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">background-color: rgb(175, 175, 175);</string>
   </property>
   <property name="frameShape">
    <enum>QFrame::StyledPanel</enum>
   </property>
   <property name="frameShadow">
    <enum>QFrame::Raised</enum>
   </property>
   <layout class="QHBoxLayout" name="horizontalLayout_3">
    <item>
     <spacer name="horizontalSpacer_2">
      <property name="orientation">
       <enum>Qt::Horizontal</enum>
      </property>
      <property name="sizeHint" stdset="0">
       <size>
        <width>102</width>
        <height>20</height>
       </size>
      </property>
     </spacer>
    </item>
    <item>
     <widget class="QPushButton" name="BTN_search">
      <property name="sizePolicy">
       <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
        <horstretch>0</horstretch>
        <verstretch>0</verstretch>
       </sizepolicy>
      </property>
      <property name="minimumSize">
       <size>
        <width>80</width>
        <height>30</height>
       </size>
      </property>
      <property name="maximumSize">
       <size>
        <width>80</width>
        <height>30</height>
       </size>
      </property>
      <property name="font">
       <font>
        <family>Microsoft YaHei</family>
        <pointsize>12</pointsize>
        <weight>75</weight>
        <bold>true</bold>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true">/* 正常状态 */
QPushButton {
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(143, 143, 143); /* 红色背景 */
	color:rgb(255, 255, 255);
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
    background-color: rgb(100, 100, 100); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
	color:rgb(255, 255, 255);
}</string>
      </property>
      <property name="text">
       <string>历史查询</string>
      </property>
     </widget>
    </item>
    <item>
     <spacer name="horizontalSpacer_9">
      <property name="orientation">
       <enum>Qt::Horizontal</enum>
      </property>
      <property name="sizeHint" stdset="0">
       <size>
        <width>102</width>
        <height>20</height>
       </size>
      </property>
     </spacer>
    </item>
    <item>
     <layout class="QHBoxLayout" name="horizontalLayout">
      <item>
       <widget class="QPushButton" name="BTN_remote">
        <property name="sizePolicy">
         <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
          <horstretch>0</horstretch>
          <verstretch>0</verstretch>
         </sizepolicy>
        </property>
        <property name="minimumSize">
         <size>
          <width>80</width>
          <height>30</height>
         </size>
        </property>
        <property name="maximumSize">
         <size>
          <width>80</width>
          <height>30</height>
         </size>
        </property>
        <property name="font">
         <font>
          <family>Microsoft YaHei</family>
          <pointsize>12</pointsize>
          <weight>75</weight>
          <bold>true</bold>
         </font>
        </property>
        <property name="styleSheet">
         <string notr="true">/* 正常状态 */
QPushButton {
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(143, 143, 143); /* 红色背景 */
	color:rgb(255, 255, 255);
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
    background-color: rgb(100, 100, 100); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
	color:rgb(255, 255, 255);
}</string>
        </property>
        <property name="text">
         <string>场控模式</string>
        </property>
       </widget>
      </item>
      <item>
       <widget class="QPushButton" name="BTN_sam">
        <property name="sizePolicy">
         <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
          <horstretch>0</horstretch>
          <verstretch>0</verstretch>
         </sizepolicy>
        </property>
        <property name="minimumSize">
         <size>
          <width>80</width>
          <height>30</height>
         </size>
        </property>
        <property name="maximumSize">
         <size>
          <width>80</width>
          <height>30</height>
         </size>
        </property>
        <property name="font">
         <font>
          <family>Microsoft YaHei</family>
          <pointsize>12</pointsize>
          <weight>75</weight>
          <bold>true</bold>
         </font>
        </property>
        <property name="styleSheet">
         <string notr="true">/* 正常状态 */
QPushButton {
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(143, 143, 143); /* 灰色背景 */
	color:rgb(255, 255, 255);
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
    background-color: rgb(100, 100, 100); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
	color:rgb(255, 255, 255);
}

</string>
        </property>
        <property name="text">
         <string>集控模式</string>
        </property>
       </widget>
      </item>
      <item>
       <widget class="QLabel" name="label_handorauto">
        <property name="sizePolicy">
         <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
          <horstretch>0</horstretch>
          <verstretch>0</verstretch>
         </sizepolicy>
        </property>
        <property name="minimumSize">
         <size>
          <width>80</width>
          <height>30</height>
         </size>
        </property>
        <property name="maximumSize">
         <size>
          <width>80</width>
          <height>30</height>
         </size>
        </property>
        <property name="font">
         <font>
          <family>Microsoft YaHei</family>
          <pointsize>12</pointsize>
         </font>
        </property>
        <property name="styleSheet">
         <string notr="true">background-color: rgb(0,0,0);
color: rgb(255, 255, 255);
border: 2px solid gray;
</string>
        </property>
        <property name="text">
         <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p align=&quot;center&quot;&gt;&lt;span style=&quot; font-size:12pt; font-weight:600;&quot;&gt;控制方式&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
        </property>
        <property name="alignment">
         <set>Qt::AlignCenter</set>
        </property>
       </widget>
      </item>
      <item>
       <widget class="QLabel" name="label_control_method">
        <property name="sizePolicy">
         <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
          <horstretch>0</horstretch>
          <verstretch>0</verstretch>
         </sizepolicy>
        </property>
        <property name="minimumSize">
         <size>
          <width>80</width>
          <height>30</height>
         </size>
        </property>
        <property name="maximumSize">
         <size>
          <width>80</width>
          <height>30</height>
         </size>
        </property>
        <property name="font">
         <font>
          <family>Microsoft YaHei</family>
          <pointsize>12</pointsize>
         </font>
        </property>
        <property name="styleSheet">
         <string notr="true">background-color: rgb(0, 0, 0);
color: rgb(0, 255, 0);
border: 2px solid gray;

</string>
        </property>
        <property name="text">
         <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p align=&quot;center&quot;&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;集控&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
        </property>
        <property name="alignment">
         <set>Qt::AlignCenter</set>
        </property>
       </widget>
      </item>
     </layout>
    </item>
    <item>
     <spacer name="horizontalSpacer_4">
      <property name="orientation">
       <enum>Qt::Horizontal</enum>
      </property>
      <property name="sizeHint" stdset="0">
       <size>
        <width>102</width>
        <height>20</height>
       </size>
      </property>
     </spacer>
    </item>
    <item>
     <layout class="QHBoxLayout" name="horizontalLayout_4">
      <item>
       <widget class="QLabel" name="label_serverA">
        <property name="sizePolicy">
         <sizepolicy hsizetype="Fixed" vsizetype="Preferred">
          <horstretch>0</horstretch>
          <verstretch>0</verstretch>
         </sizepolicy>
        </property>
        <property name="minimumSize">
         <size>
          <width>80</width>
          <height>30</height>
         </size>
        </property>
        <property name="maximumSize">
         <size>
          <width>80</width>
          <height>30</height>
         </size>
        </property>
        <property name="font">
         <font>
          <family>Microsoft YaHei</family>
          <pointsize>12</pointsize>
         </font>
        </property>
        <property name="styleSheet">
         <string notr="true">background-color: rgb(0,0,0);
color: rgb(255, 255, 255);
border: 2px solid gray;
</string>
        </property>
        <property name="text">
         <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p align=&quot;center&quot;&gt;&lt;span style=&quot; font-size:12pt; font-weight:600;&quot;&gt;服务器A&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
        </property>
        <property name="alignment">
         <set>Qt::AlignCenter</set>
        </property>
       </widget>
      </item>
      <item>
       <widget class="QLabel" name="label_serverA_state">
        <property name="sizePolicy">
         <sizepolicy hsizetype="Fixed" vsizetype="Preferred">
          <horstretch>0</horstretch>
          <verstretch>0</verstretch>
         </sizepolicy>
        </property>
        <property name="minimumSize">
         <size>
          <width>80</width>
          <height>30</height>
         </size>
        </property>
        <property name="maximumSize">
         <size>
          <width>80</width>
          <height>30</height>
         </size>
        </property>
        <property name="font">
         <font>
          <family>Microsoft YaHei</family>
          <pointsize>12</pointsize>
         </font>
        </property>
        <property name="styleSheet">
         <string notr="true">background-color: rgb(0, 0, 0);
color: rgb(255, 0, 0);
border: 2px solid gray;
</string>
        </property>
        <property name="text">
         <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p align=&quot;center&quot;&gt;&lt;span style=&quot; font-size:12pt; font-weight:600;&quot;&gt;备用&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
        </property>
        <property name="alignment">
         <set>Qt::AlignCenter</set>
        </property>
       </widget>
      </item>
     </layout>
    </item>
    <item>
     <spacer name="horizontalSpacer_5">
      <property name="orientation">
       <enum>Qt::Horizontal</enum>
      </property>
      <property name="sizeHint" stdset="0">
       <size>
        <width>103</width>
        <height>20</height>
       </size>
      </property>
     </spacer>
    </item>
    <item>
     <layout class="QHBoxLayout" name="horizontalLayout_5">
      <item>
       <widget class="QLabel" name="label_serverB">
        <property name="sizePolicy">
         <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
          <horstretch>0</horstretch>
          <verstretch>0</verstretch>
         </sizepolicy>
        </property>
        <property name="minimumSize">
         <size>
          <width>80</width>
          <height>30</height>
         </size>
        </property>
        <property name="maximumSize">
         <size>
          <width>80</width>
          <height>30</height>
         </size>
        </property>
        <property name="font">
         <font>
          <family>Microsoft YaHei</family>
          <pointsize>12</pointsize>
         </font>
        </property>
        <property name="styleSheet">
         <string notr="true">background-color: rgb(0,0,0);
color: rgb(255, 255, 255);
border: 2px solid gray;
</string>
        </property>
        <property name="text">
         <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p align=&quot;center&quot;&gt;&lt;span style=&quot; font-size:12pt; font-weight:600;&quot;&gt;服务器B&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
        </property>
        <property name="alignment">
         <set>Qt::AlignCenter</set>
        </property>
       </widget>
      </item>
      <item>
       <widget class="QLabel" name="label_serverB_state">
        <property name="sizePolicy">
         <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
          <horstretch>0</horstretch>
          <verstretch>0</verstretch>
         </sizepolicy>
        </property>
        <property name="minimumSize">
         <size>
          <width>80</width>
          <height>30</height>
         </size>
        </property>
        <property name="maximumSize">
         <size>
          <width>80</width>
          <height>30</height>
         </size>
        </property>
        <property name="font">
         <font>
          <family>Microsoft YaHei</family>
          <pointsize>12</pointsize>
         </font>
        </property>
        <property name="styleSheet">
         <string notr="true">background-color: rgb(0, 0, 0);
color: rgb(255, 0, 0);
border: 2px solid gray;

</string>
        </property>
        <property name="text">
         <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p align=&quot;center&quot;&gt;&lt;span style=&quot; font-size:12pt; font-weight:600;&quot;&gt;备用&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
        </property>
        <property name="alignment">
         <set>Qt::AlignCenter</set>
        </property>
       </widget>
      </item>
     </layout>
    </item>
    <item>
     <spacer name="horizontalSpacer_6">
      <property name="orientation">
       <enum>Qt::Horizontal</enum>
      </property>
      <property name="sizeHint" stdset="0">
       <size>
        <width>102</width>
        <height>20</height>
       </size>
      </property>
     </spacer>
    </item>
    <item>
     <layout class="QHBoxLayout" name="horizontalLayout_7">
      <item>
       <widget class="QLabel" name="label_SAMA">
        <property name="sizePolicy">
         <sizepolicy hsizetype="Fixed" vsizetype="Preferred">
          <horstretch>0</horstretch>
          <verstretch>0</verstretch>
         </sizepolicy>
        </property>
        <property name="minimumSize">
         <size>
          <width>80</width>
          <height>30</height>
         </size>
        </property>
        <property name="maximumSize">
         <size>
          <width>80</width>
          <height>30</height>
         </size>
        </property>
        <property name="font">
         <font>
          <family>Microsoft YaHei</family>
          <pointsize>12</pointsize>
         </font>
        </property>
        <property name="styleSheet">
         <string notr="true">background-color: rgb(0,0,0);
color: rgb(255, 255, 255);
border: 2px solid gray;
</string>
        </property>
        <property name="text">
         <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p align=&quot;center&quot;&gt;&lt;span style=&quot; font-size:12pt; font-weight:600;&quot;&gt;SAM1&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
        </property>
        <property name="alignment">
         <set>Qt::AlignCenter</set>
        </property>
       </widget>
      </item>
      <item>
       <widget class="QLabel" name="label_SAMA_state">
        <property name="sizePolicy">
         <sizepolicy hsizetype="Fixed" vsizetype="Preferred">
          <horstretch>0</horstretch>
          <verstretch>0</verstretch>
         </sizepolicy>
        </property>
        <property name="minimumSize">
         <size>
          <width>80</width>
          <height>30</height>
         </size>
        </property>
        <property name="maximumSize">
         <size>
          <width>80</width>
          <height>30</height>
         </size>
        </property>
        <property name="font">
         <font>
          <family>Microsoft YaHei</family>
          <pointsize>12</pointsize>
         </font>
        </property>
        <property name="styleSheet">
         <string notr="true">background-color: rgb(0, 0, 0);
color: rgb(0, 255, 0);
border: 2px solid gray;
</string>
        </property>
        <property name="text">
         <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p align=&quot;center&quot;&gt;&lt;span style=&quot; font-size:12pt; font-weight:600;&quot;&gt;备用&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
        </property>
        <property name="alignment">
         <set>Qt::AlignCenter</set>
        </property>
       </widget>
      </item>
     </layout>
    </item>
    <item>
     <spacer name="horizontalSpacer_7">
      <property name="orientation">
       <enum>Qt::Horizontal</enum>
      </property>
      <property name="sizeHint" stdset="0">
       <size>
        <width>102</width>
        <height>20</height>
       </size>
      </property>
     </spacer>
    </item>
    <item>
     <layout class="QHBoxLayout" name="horizontalLayout_8">
      <item>
       <widget class="QLabel" name="label_SAMB">
        <property name="sizePolicy">
         <sizepolicy hsizetype="Fixed" vsizetype="Preferred">
          <horstretch>0</horstretch>
          <verstretch>0</verstretch>
         </sizepolicy>
        </property>
        <property name="minimumSize">
         <size>
          <width>80</width>
          <height>30</height>
         </size>
        </property>
        <property name="maximumSize">
         <size>
          <width>80</width>
          <height>30</height>
         </size>
        </property>
        <property name="font">
         <font>
          <family>Microsoft YaHei</family>
          <pointsize>12</pointsize>
         </font>
        </property>
        <property name="styleSheet">
         <string notr="true">background-color: rgb(0,0,0);
color: rgb(255, 255, 255);
border: 2px solid gray;
</string>
        </property>
        <property name="text">
         <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p align=&quot;center&quot;&gt;&lt;span style=&quot; font-size:12pt; font-weight:600;&quot;&gt;SAM2&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
        </property>
        <property name="alignment">
         <set>Qt::AlignCenter</set>
        </property>
       </widget>
      </item>
      <item>
       <widget class="QLabel" name="label_SAMB_state">
        <property name="sizePolicy">
         <sizepolicy hsizetype="Fixed" vsizetype="Preferred">
          <horstretch>0</horstretch>
          <verstretch>0</verstretch>
         </sizepolicy>
        </property>
        <property name="minimumSize">
         <size>
          <width>80</width>
          <height>30</height>
         </size>
        </property>
        <property name="maximumSize">
         <size>
          <width>80</width>
          <height>30</height>
         </size>
        </property>
        <property name="font">
         <font>
          <family>Microsoft YaHei</family>
          <pointsize>12</pointsize>
         </font>
        </property>
        <property name="styleSheet">
         <string notr="true">background-color: rgb(0, 0, 0);
color: rgb(0, 255, 0);
border: 2px solid gray;
</string>
        </property>
        <property name="text">
         <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p align=&quot;center&quot;&gt;&lt;span style=&quot; font-size:12pt; font-weight:600;&quot;&gt;备用&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
        </property>
        <property name="alignment">
         <set>Qt::AlignCenter</set>
        </property>
       </widget>
      </item>
     </layout>
    </item>
    <item>
     <spacer name="horizontalSpacer_8">
      <property name="orientation">
       <enum>Qt::Horizontal</enum>
      </property>
      <property name="sizeHint" stdset="0">
       <size>
        <width>102</width>
        <height>20</height>
       </size>
      </property>
     </spacer>
    </item>
   </layout>
  </widget>
  <widget class="QFrame" name="frame_2">
   <property name="geometry">
    <rect>
     <x>75</x>
     <y>85</y>
     <width>420</width>
     <height>70</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="styleSheet">
    <string notr="true">QFrame {
    background-color: black;
}</string>
   </property>
   <property name="frameShape">
    <enum>QFrame::StyledPanel</enum>
   </property>
   <property name="frameShadow">
    <enum>QFrame::Raised</enum>
   </property>
   <layout class="QGridLayout" name="gridLayout">
    <item row="0" column="0">
     <layout class="QHBoxLayout" name="horizontalLayout_2">
      <item>
       <widget class="QPushButton" name="BTN_brake">
        <property name="sizePolicy">
         <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
          <horstretch>0</horstretch>
          <verstretch>0</verstretch>
         </sizepolicy>
        </property>
        <property name="minimumSize">
         <size>
          <width>80</width>
          <height>40</height>
         </size>
        </property>
        <property name="maximumSize">
         <size>
          <width>80</width>
          <height>40</height>
         </size>
        </property>
        <property name="font">
         <font>
          <family>Microsoft YaHei</family>
          <pointsize>12</pointsize>
          <weight>75</weight>
          <bold>true</bold>
         </font>
        </property>
        <property name="styleSheet">
         <string notr="true">/* 正常状态 */
QPushButton {
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(200, 0, 0); /* 红色背景 */
	color:rgb(255, 255, 255);
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
    background-color: rgb(100, 0, 0); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
	color:rgb(255, 255, 255);
}</string>
        </property>
        <property name="text">
         <string>制动控制</string>
        </property>
       </widget>
      </item>
      <item>
       <spacer name="horizontalSpacer">
        <property name="orientation">
         <enum>Qt::Horizontal</enum>
        </property>
        <property name="sizeType">
         <enum>QSizePolicy::Fixed</enum>
        </property>
        <property name="sizeHint" stdset="0">
         <size>
          <width>57</width>
          <height>17</height>
         </size>
        </property>
       </spacer>
      </item>
      <item>
       <widget class="QPushButton" name="BTN_release">
        <property name="sizePolicy">
         <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
          <horstretch>0</horstretch>
          <verstretch>0</verstretch>
         </sizepolicy>
        </property>
        <property name="minimumSize">
         <size>
          <width>80</width>
          <height>40</height>
         </size>
        </property>
        <property name="maximumSize">
         <size>
          <width>80</width>
          <height>40</height>
         </size>
        </property>
        <property name="font">
         <font>
          <family>Microsoft YaHei</family>
          <pointsize>12</pointsize>
          <weight>75</weight>
          <bold>true</bold>
         </font>
        </property>
        <property name="styleSheet">
         <string notr="true">/* 正常状态 */
QPushButton {
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(0, 200, 0); /* 红色背景 */
	color:rgb(255, 255, 255);
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
    background-color: rgb(0, 100, 0); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
	color:rgb(255, 255, 255);
}</string>
        </property>
        <property name="text">
         <string>缓解控制</string>
        </property>
       </widget>
      </item>
     </layout>
    </item>
   </layout>
  </widget>
  <widget class="QPushButton" name="BTN2_6">
   <property name="geometry">
    <rect>
     <x>158</x>
     <y>200</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(242, 150, 37); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(200, 120, 30); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>封锁</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN3_6">
   <property name="geometry">
    <rect>
     <x>128</x>
     <y>233</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(242, 150, 37); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(200, 120, 30); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>封锁</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN4_6">
   <property name="geometry">
    <rect>
     <x>158</x>
     <y>265</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(242, 150, 37); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(200, 120, 30); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>封锁</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN5_6">
   <property name="geometry">
    <rect>
     <x>130</x>
     <y>304</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(242, 150, 37); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(200, 120, 30); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>封锁</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN12_6">
   <property name="geometry">
    <rect>
     <x>156</x>
     <y>574</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(242, 150, 37); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(200, 120, 30); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>封锁</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN11_6">
   <property name="geometry">
    <rect>
     <x>126</x>
     <y>540</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(242, 150, 37); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(200, 120, 30); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>封锁</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN10_6">
   <property name="geometry">
    <rect>
     <x>156</x>
     <y>506</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(242, 150, 37); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(200, 120, 30); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>封锁</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN13_6">
   <property name="geometry">
    <rect>
     <x>128</x>
     <y>610</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(242, 150, 37); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(200, 120, 30); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>封锁</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN20_6">
   <property name="geometry">
    <rect>
     <x>156</x>
     <y>881</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(242, 150, 37); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(200, 120, 30); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>封锁</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN19_6">
   <property name="geometry">
    <rect>
     <x>126</x>
     <y>849</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(242, 150, 37); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(200, 120, 30); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>封锁</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN18_6">
   <property name="geometry">
    <rect>
     <x>156</x>
     <y>816</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(242, 150, 37); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(200, 120, 30); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>封锁</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN21_6">
   <property name="geometry">
    <rect>
     <x>128</x>
     <y>917</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(242, 150, 37); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(200, 120, 30); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>封锁</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN8_6">
   <property name="geometry">
    <rect>
     <x>158</x>
     <y>413</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(242, 150, 37); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(200, 120, 30); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>封锁</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN7_6">
   <property name="geometry">
    <rect>
     <x>128</x>
     <y>377</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(242, 150, 37); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(200, 120, 30); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>封锁</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN6_6">
   <property name="geometry">
    <rect>
     <x>158</x>
     <y>340</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(242, 150, 37); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(200, 120, 30); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>封锁</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN15_6">
   <property name="geometry">
    <rect>
     <x>128</x>
     <y>684</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(242, 150, 37); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(200, 120, 30); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>封锁</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN16_6">
   <property name="geometry">
    <rect>
     <x>158</x>
     <y>720</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(242, 150, 37); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(200, 120, 30); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>封锁</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN14_6">
   <property name="geometry">
    <rect>
     <x>158</x>
     <y>646</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(242, 150, 37); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(200, 120, 30); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>封锁</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN23_6">
   <property name="geometry">
    <rect>
     <x>118</x>
     <y>990</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(242, 150, 37); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(200, 120, 30); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>封锁</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN24_6">
   <property name="geometry">
    <rect>
     <x>158</x>
     <y>1028</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(242, 150, 37); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(200, 120, 30); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>封锁</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN22_6">
   <property name="geometry">
    <rect>
     <x>157</x>
     <y>956</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(242, 150, 37); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(200, 120, 30); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>封锁</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN17_6">
   <property name="geometry">
    <rect>
     <x>127</x>
     <y>777</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(242, 150, 37); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(200, 120, 30); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>封锁</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN9_6">
   <property name="geometry">
    <rect>
     <x>128</x>
     <y>470</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(242, 150, 37); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(200, 120, 30); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>封锁</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN14_7">
   <property name="geometry">
    <rect>
     <x>97</x>
     <y>646</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(200, 200, 0); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(150, 150, 0); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>查询</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN21_7">
   <property name="geometry">
    <rect>
     <x>67</x>
     <y>917</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(200, 200, 0); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(150, 150, 0); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>查询</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN4_7">
   <property name="geometry">
    <rect>
     <x>97</x>
     <y>265</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(200, 200, 0); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(150, 150, 0); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>查询</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN6_7">
   <property name="geometry">
    <rect>
     <x>97</x>
     <y>340</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(200, 200, 0); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(150, 150, 0); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>查询</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN7_7">
   <property name="geometry">
    <rect>
     <x>67</x>
     <y>377</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(200, 200, 0); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(150, 150, 0); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>查询</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN9_7">
   <property name="geometry">
    <rect>
     <x>67</x>
     <y>470</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(200, 200, 0); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(150, 150, 0); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>查询</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN15_7">
   <property name="geometry">
    <rect>
     <x>67</x>
     <y>684</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(200, 200, 0); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(150, 150, 0); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>查询</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN13_7">
   <property name="geometry">
    <rect>
     <x>67</x>
     <y>610</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(200, 200, 0); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(150, 150, 0); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>查询</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN18_7">
   <property name="geometry">
    <rect>
     <x>95</x>
     <y>816</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(200, 200, 0); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(150, 150, 0); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>查询</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN2_7">
   <property name="geometry">
    <rect>
     <x>97</x>
     <y>200</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(200, 200, 0); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(150, 150, 0); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>查询</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN3_7">
   <property name="geometry">
    <rect>
     <x>67</x>
     <y>233</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(200, 200, 0); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(150, 150, 0); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>查询</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN12_7">
   <property name="geometry">
    <rect>
     <x>95</x>
     <y>574</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(200, 200, 0); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(150, 150, 0); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>查询</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN16_7">
   <property name="geometry">
    <rect>
     <x>97</x>
     <y>720</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(200, 200, 0); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(150, 150, 0); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>查询</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN11_7">
   <property name="geometry">
    <rect>
     <x>65</x>
     <y>540</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(200, 200, 0); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(150, 150, 0); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>查询</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN17_7">
   <property name="geometry">
    <rect>
     <x>66</x>
     <y>777</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(200, 200, 0); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(150, 150, 0); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>查询</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN5_7">
   <property name="geometry">
    <rect>
     <x>69</x>
     <y>304</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(200, 200, 0); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(150, 150, 0); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>查询</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN24_7">
   <property name="geometry">
    <rect>
     <x>97</x>
     <y>1028</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(200, 200, 0); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(150, 150, 0); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>查询</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN20_7">
   <property name="geometry">
    <rect>
     <x>95</x>
     <y>881</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(200, 200, 0); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(150, 150, 0); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>查询</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN22_7">
   <property name="geometry">
    <rect>
     <x>96</x>
     <y>956</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(200, 200, 0); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(150, 150, 0); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>查询</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN10_7">
   <property name="geometry">
    <rect>
     <x>95</x>
     <y>506</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(200, 200, 0); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(150, 150, 0); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>查询</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN8_7">
   <property name="geometry">
    <rect>
     <x>97</x>
     <y>413</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(200, 200, 0); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(150, 150, 0); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>查询</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN23_7">
   <property name="geometry">
    <rect>
     <x>57</x>
     <y>990</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(200, 200, 0); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(150, 150, 0); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>查询</string>
   </property>
  </widget>
  <widget class="QPushButton" name="BTN19_7">
   <property name="geometry">
    <rect>
     <x>65</x>
     <y>849</y>
     <width>50</width>
     <height>30</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>50</width>
     <height>30</height>
    </size>
   </property>
   <property name="font">
    <font>
     <family>Microsoft YaHei</family>
     <pointsize>12</pointsize>
     <weight>75</weight>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">/* 正常状态 */
QPushButton {
	color: rgb(255, 255, 255);
    border-radius: 0px;             /* 直角矩形 */
    background-color: rgb(200, 200, 0); /* 绿色背景 */
	border-radius: 8px; /* 圆角半径 */
}

/* 按下状态（保持不透明） */
QPushButton:pressed {
	color: rgb(255, 255, 255);    
	background-color: rgb(150, 150, 0); /* 按下时变暗，但不透明 */
    border: 1px solid #888;           /* 添加边框增强点击反馈 */
}</string>
   </property>
   <property name="text">
    <string>查询</string>
   </property>
  </widget>
  <zorder>label</zorder>
  <zorder>label_2</zorder>
  <zorder>line_2</zorder>
  <zorder>line</zorder>
  <zorder>line_3</zorder>
  <zorder>line_4</zorder>
  <zorder>line_5</zorder>
  <zorder>line_6</zorder>
  <zorder>line_7</zorder>
  <zorder>line_8</zorder>
  <zorder>BTN6_4</zorder>
  <zorder>BTN8_1</zorder>
  <zorder>BTN7_1</zorder>
  <zorder>BTN4_2</zorder>
  <zorder>BTN6_1</zorder>
  <zorder>BTN2_1</zorder>
  <zorder>BTN3_2</zorder>
  <zorder>BTN8_4</zorder>
  <zorder>BTN2_3</zorder>
  <zorder>BTN2_5</zorder>
  <zorder>BTN4_5</zorder>
  <zorder>BTN5_3</zorder>
  <zorder>BTN4_3</zorder>
  <zorder>BTN6_5</zorder>
  <zorder>BTN3_5</zorder>
  <zorder>BTN4_4</zorder>
  <zorder>BTN7_2</zorder>
  <zorder>BTN5_2</zorder>
  <zorder>BTN7_4</zorder>
  <zorder>BTN2_2</zorder>
  <zorder>BTN7_3</zorder>
  <zorder>BTN6_2</zorder>
  <zorder>BTN8_3</zorder>
  <zorder>BTN5_1</zorder>
  <zorder>BTN7_5</zorder>
  <zorder>BTN8_5</zorder>
  <zorder>BTN3_1</zorder>
  <zorder>BTN3_3</zorder>
  <zorder>BTN6_3</zorder>
  <zorder>BTN3_4</zorder>
  <zorder>BTN2_4</zorder>
  <zorder>BTN5_5</zorder>
  <zorder>BTN8_2</zorder>
  <zorder>BTN4_1</zorder>
  <zorder>BTN5_4</zorder>
  <zorder>line_9</zorder>
  <zorder>line_10</zorder>
  <zorder>line_11</zorder>
  <zorder>line_12</zorder>
  <zorder>line_13</zorder>
  <zorder>line_14</zorder>
  <zorder>line_15</zorder>
  <zorder>line_16</zorder>
  <zorder>line_17</zorder>
  <zorder>line_18</zorder>
  <zorder>line_19</zorder>
  <zorder>line_20</zorder>
  <zorder>line_21</zorder>
  <zorder>line_22</zorder>
  <zorder>line_23</zorder>
  <zorder>line_24</zorder>
  <zorder>label_27</zorder>
  <zorder>label_30</zorder>
  <zorder>label_34</zorder>
  <zorder>label_37</zorder>
  <zorder>label_38</zorder>
  <zorder>label_43</zorder>
  <zorder>label_46</zorder>
  <zorder>label_48</zorder>
  <zorder>label_49</zorder>
  <zorder>label_47</zorder>
  <zorder>label_39</zorder>
  <zorder>label_31</zorder>
  <zorder>label_40</zorder>
  <zorder>label_28</zorder>
  <zorder>label_35</zorder>
  <zorder>label_44</zorder>
  <zorder>label_36</zorder>
  <zorder>label_50</zorder>
  <zorder>label_41</zorder>
  <zorder>label_45</zorder>
  <zorder>label_42</zorder>
  <zorder>label_29</zorder>
  <zorder>label_51</zorder>
  <zorder>label_32</zorder>
  <zorder>BTN9_5</zorder>
  <zorder>BTN9_4</zorder>
  <zorder>BTN10_5</zorder>
  <zorder>BTN16_4</zorder>
  <zorder>BTN12_5</zorder>
  <zorder>BTN13_5</zorder>
  <zorder>BTN16_5</zorder>
  <zorder>BTN10_4</zorder>
  <zorder>BTN14_5</zorder>
  <zorder>BTN15_4</zorder>
  <zorder>BTN12_4</zorder>
  <zorder>BTN13_4</zorder>
  <zorder>BTN11_4</zorder>
  <zorder>BTN15_5</zorder>
  <zorder>BTN11_5</zorder>
  <zorder>BTN14_4</zorder>
  <zorder>BTN17_4</zorder>
  <zorder>BTN17_5</zorder>
  <zorder>BTN20_4</zorder>
  <zorder>BTN21_4</zorder>
  <zorder>BTN18_5</zorder>
  <zorder>BTN19_4</zorder>
  <zorder>BTN19_5</zorder>
  <zorder>BTN23_4</zorder>
  <zorder>BTN23_5</zorder>
  <zorder>BTN21_5</zorder>
  <zorder>BTN18_4</zorder>
  <zorder>BTN20_5</zorder>
  <zorder>BTN24_5</zorder>
  <zorder>BTN22_4</zorder>
  <zorder>BTN22_5</zorder>
  <zorder>BTN24_4</zorder>
  <zorder>BTN14_3</zorder>
  <zorder>BTN23_1</zorder>
  <zorder>BTN18_2</zorder>
  <zorder>BTN16_2</zorder>
  <zorder>BTN9_3</zorder>
  <zorder>BTN23_3</zorder>
  <zorder>BTN22_2</zorder>
  <zorder>BTN10_3</zorder>
  <zorder>BTN19_1</zorder>
  <zorder>BTN11_1</zorder>
  <zorder>BTN13_2</zorder>
  <zorder>BTN12_1</zorder>
  <zorder>BTN20_2</zorder>
  <zorder>BTN23_2</zorder>
  <zorder>BTN16_1</zorder>
  <zorder>BTN19_3</zorder>
  <zorder>BTN21_2</zorder>
  <zorder>BTN20_3</zorder>
  <zorder>BTN17_3</zorder>
  <zorder>BTN16_3</zorder>
  <zorder>BTN21_3</zorder>
  <zorder>BTN22_1</zorder>
  <zorder>BTN14_2</zorder>
  <zorder>BTN10_1</zorder>
  <zorder>BTN15_1</zorder>
  <zorder>BTN18_3</zorder>
  <zorder>BTN13_1</zorder>
  <zorder>BTN15_2</zorder>
  <zorder>BTN24_2</zorder>
  <zorder>BTN21_1</zorder>
  <zorder>BTN12_3</zorder>
  <zorder>BTN18_1</zorder>
  <zorder>BTN14_1</zorder>
  <zorder>BTN17_1</zorder>
  <zorder>BTN9_2</zorder>
  <zorder>BTN11_2</zorder>
  <zorder>BTN13_3</zorder>
  <zorder>BTN19_2</zorder>
  <zorder>BTN15_3</zorder>
  <zorder>BTN12_2</zorder>
  <zorder>BTN22_3</zorder>
  <zorder>BTN24_3</zorder>
  <zorder>BTN9_1</zorder>
  <zorder>BTN11_3</zorder>
  <zorder>BTN17_2</zorder>
  <zorder>BTN10_2</zorder>
  <zorder>BTN20_1</zorder>
  <zorder>BTN24_1</zorder>
  <zorder>label_52</zorder>
  <zorder>label_53</zorder>
  <zorder>label_54</zorder>
  <zorder>label_33</zorder>
  <zorder>label_55</zorder>
  <zorder>label_56</zorder>
  <zorder>label_57</zorder>
  <zorder>label_58</zorder>
  <zorder>label_59</zorder>
  <zorder>label_60</zorder>
  <zorder>label_61</zorder>
  <zorder>label_62</zorder>
  <zorder>label_63</zorder>
  <zorder>label_64</zorder>
  <zorder>label_65</zorder>
  <zorder>label_66</zorder>
  <zorder>label_67</zorder>
  <zorder>label_68</zorder>
  <zorder>label_69</zorder>
  <zorder>label_70</zorder>
  <zorder>label_71</zorder>
  <zorder>label_72</zorder>
  <zorder>label_73</zorder>
  <zorder>label_74</zorder>
  <zorder>label_8</zorder>
  <zorder>label_9</zorder>
  <zorder>label_anti_slip_2</zorder>
  <zorder>label_anti_slip_3</zorder>
  <zorder>label_anti_slip_4</zorder>
  <zorder>label_anti_slip_5</zorder>
  <zorder>label_anti_slip_8</zorder>
  <zorder>label_anti_slip_6</zorder>
  <zorder>label_anti_slip_7</zorder>
  <zorder>label_anti_slip_9</zorder>
  <zorder>label_anti_slip_12</zorder>
  <zorder>label_anti_slip_14</zorder>
  <zorder>label_anti_slip_10</zorder>
  <zorder>label_anti_slip_11</zorder>
  <zorder>label_anti_slip_13</zorder>
  <zorder>label_anti_slip_16</zorder>
  <zorder>label_anti_slip_15</zorder>
  <zorder>label_anti_slip_17</zorder>
  <zorder>label_anti_slip_20</zorder>
  <zorder>label_anti_slip_22</zorder>
  <zorder>label_anti_slip_18</zorder>
  <zorder>label_anti_slip_19</zorder>
  <zorder>label_anti_slip_21</zorder>
  <zorder>label_anti_slip_24</zorder>
  <zorder>label_anti_slip_23</zorder>
  <zorder>frame</zorder>
  <zorder>frame_2</zorder>
  <zorder>label_5</zorder>
  <zorder>BTN2_6</zorder>
  <zorder>BTN3_6</zorder>
  <zorder>BTN4_6</zorder>
  <zorder>BTN5_6</zorder>
  <zorder>BTN12_6</zorder>
  <zorder>BTN11_6</zorder>
  <zorder>BTN10_6</zorder>
  <zorder>BTN13_6</zorder>
  <zorder>BTN20_6</zorder>
  <zorder>BTN19_6</zorder>
  <zorder>BTN18_6</zorder>
  <zorder>BTN21_6</zorder>
  <zorder>BTN8_6</zorder>
  <zorder>BTN7_6</zorder>
  <zorder>BTN6_6</zorder>
  <zorder>BTN15_6</zorder>
  <zorder>BTN16_6</zorder>
  <zorder>BTN14_6</zorder>
  <zorder>BTN23_6</zorder>
  <zorder>BTN24_6</zorder>
  <zorder>BTN22_6</zorder>
  <zorder>BTN17_6</zorder>
  <zorder>BTN9_6</zorder>
  <zorder>BTN14_7</zorder>
  <zorder>BTN21_7</zorder>
  <zorder>BTN4_7</zorder>
  <zorder>BTN6_7</zorder>
  <zorder>BTN7_7</zorder>
  <zorder>BTN9_7</zorder>
  <zorder>BTN15_7</zorder>
  <zorder>BTN13_7</zorder>
  <zorder>BTN18_7</zorder>
  <zorder>BTN2_7</zorder>
  <zorder>BTN3_7</zorder>
  <zorder>BTN12_7</zorder>
  <zorder>BTN16_7</zorder>
  <zorder>BTN11_7</zorder>
  <zorder>BTN17_7</zorder>
  <zorder>BTN5_7</zorder>
  <zorder>BTN24_7</zorder>
  <zorder>BTN20_7</zorder>
  <zorder>BTN22_7</zorder>
  <zorder>BTN10_7</zorder>
  <zorder>BTN8_7</zorder>
  <zorder>BTN23_7</zorder>
  <zorder>BTN19_7</zorder>
 </widget>
 <resources>
  <include location="images/images.qrc"/>
 </resources>
 <connections/>
</ui>
